/**************************
***** Compiler Parameters *****
***************************
@P EffectName: DrawFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin PointCloudKinect_DrawFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 416]
@C    World_id29 => Transformation.World
@C    WorldInverse_id30 => Transformation.WorldInverse
@C    WorldInverseTranspose_id31 => Transformation.WorldInverseTranspose
@C    WorldView_id32 => Transformation.WorldView
@C    WorldViewInverse_id33 => Transformation.WorldViewInverse
@C    WorldViewProjection_id34 => Transformation.WorldViewProjection
@C    WorldScale_id35 => Transformation.WorldScale
@C    EyeMS_id36 => Transformation.EyeMS
cbuffer PerView [Size: 352]
@C    View_id22 => Transformation.View
@C    ViewInverse_id23 => Transformation.ViewInverse
@C    Projection_id24 => Transformation.Projection
@C    ProjectionInverse_id25 => Transformation.ProjectionInverse
@C    ViewProjection_id26 => Transformation.ViewProjection
@C    ProjScreenRay_id27 => Transformation.ProjScreenRay
@C    Eye_id28 => Transformation.Eye
cbuffer Globals [Size: 336]
@C    Texture0TexelSize_id38 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id40 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id42 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id44 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id46 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id48 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id50 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id52 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id54 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id56 => Texturing.Texture9TexelSize
@C    Color_id95 => PointCloudKinect_DrawFX.Color
@C    Amount_id96 => PointCloudKinect_DrawFX.Amount
@C    kinect_id97 => PointCloudKinect_DrawFX.kinect
@C    BoundTrans_id98 => PointCloudKinect_DrawFX.BoundTrans
@C    GlobalTrans_id99 => PointCloudKinect_DrawFX.GlobalTrans
@C    SpriteSize_id100 => PointCloudKinect_DrawFX.SpriteSize
@C    ThreshHinten_id101 => PointCloudKinect_DrawFX.ThreshHinten
@C    ThreshVorne_id102 => PointCloudKinect_DrawFX.ThreshVorne
@C    ThreshUnten_id103 => PointCloudKinect_DrawFX.ThreshUnten
@C    ThreshRechts_id104 => PointCloudKinect_DrawFX.ThreshRechts
@C    ThreshLinks_id105 => PointCloudKinect_DrawFX.ThreshLinks
***************************
******  Resources    ******
***************************
@R    LinearSampler_id67 => Texturing.LinearSampler [Stage: Vertex, Slot: (0-0)]
@R    Texture0_id37 => Texturing.Texture0 [Stage: Vertex, Slot: (0-0)]
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Globals => Globals [Stage: Vertex, Slot: (1-1)]
@R    PerView => PerView [Stage: Geometry, Slot: (0-0)]
@R    Globals => Globals [Stage: Geometry, Slot: (1-1)]
@R    LinearSampler_id67 => Texturing.LinearSampler [Stage: Pixel, Slot: (0-0)]
@R    Texture1_id39 => Texturing.Texture1 [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    PointCloudKinect_DrawFX => d14cbab579f8c17b675e138852f060f7
@S    VS_PS_Base => dd9c2756ab59db00c5dcacc592c1524a
@S    ShaderBase => 01e372056ff6c06edab8e988414a8f75
@S    ShaderBaseStream => 91c0ea8aae0a45ca00578a4084fa3607
@S    PositionStream4 => 978c413387a2cb385e61d6d096be6d21
@S    NormalStream => 901c352015317e9dff7f9aef777dc0c7
@S    Transformation => 6c40fce14b58a620257103f7d0f4c093
@S    Texturing => 6605f68230266eff2bc8b4e8102ede6b
***************************
*****     Stages      *****
***************************
@G    Vertex => 6499df40b28cd9ac148b35a10ecbbb80
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 World_id29;               // Offset:    0 Size:    64
//   float4x4 WorldInverse_id30;        // Offset:   64 Size:    64 [unused]
//   float4x4 WorldInverseTranspose_id31;// Offset:  128 Size:    64 [unused]
//   float4x4 WorldView_id32;           // Offset:  192 Size:    64 [unused]
//   float4x4 WorldViewInverse_id33;    // Offset:  256 Size:    64 [unused]
//   float4x4 WorldViewProjection_id34; // Offset:  320 Size:    64 [unused]
//   float3 WorldScale_id35;            // Offset:  384 Size:    12 [unused]
//   float4 EyeMS_id36;                 // Offset:  400 Size:    16 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id38;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id40;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id42;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id44;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id46;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id48;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id50;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id52;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id54;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id56;     // Offset:   72 Size:     8 [unused]
//   float4 Color_id95;                 // Offset:   80 Size:    16 [unused]
//      = 0x3f800000 0x00000000 0x00000000 0x3f800000 
//   float Amount_id96;                 // Offset:   96 Size:     4
//   float4x4 kinect_id97;              // Offset:  112 Size:    64
//   float4x4 BoundTrans_id98;          // Offset:  176 Size:    64 [unused]
//   float4x4 GlobalTrans_id99;         // Offset:  240 Size:    64 [unused]
//   float SpriteSize_id100;            // Offset:  304 Size:     4 [unused]
//      = 0x3c23d70a 
//   float ThreshHinten_id101;          // Offset:  308 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshVorne_id102;           // Offset:  312 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshUnten_id103;           // Offset:  316 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshRechts_id104;          // Offset:  320 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshLinks_id105;           // Offset:  324 Size:     4 [unused]
//      = 0x00000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id67                sampler      NA          NA             s0      1 
// Texture0_id37                     texture  float4          2d             t0      1 
// PerDraw                           cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// POSITION                 0   xyzw        1     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION_WS              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xy
dcl_input v1.xyw
dcl_output o0.xyzw
dcl_output o1.xy
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- __input__.TexCoord_id85.x; v0.y <- __input__.TexCoord_id85.y; 
//   v1.x <- __input__.Position_id14.x; v1.y <- __input__.Position_id14.y; v1.z <- __input__.Position_id14.z; v1.w <- __input__.Position_id14.w; 
//   o1.x <- <VSMain return value>.TexCoord_id85.x; o1.y <- <VSMain return value>.TexCoord_id85.y; 
//   o0.x <- <VSMain return value>.PositionWS_id15.x; o0.y <- <VSMain return value>.PositionWS_id15.y; o0.z <- <VSMain return value>.PositionWS_id15.z; o0.w <- <VSMain return value>.PositionWS_id15.w
//
#line 223 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_DrawFXEffect_8da064bdc1f4a78803abce3207c82b9d.hlsl"
mul r0.xyzw, cb0[0].yyyy, cb1[8].xyzw
mad r0.xyzw, cb1[7].xyzw, cb0[0].xxxx, r0.xyzw
mad r0.xyzw, cb1[9].xyzw, cb0[0].zzzz, r0.xyzw
mad r0.xyzw, cb1[10].xyzw, cb0[0].wwww, r0.xyzw

#line 221
sample_l_indexable(texture2d)(float,float,float,float) r1.x, v0.xyxx, t0.xyzw, s0, l(0.000000)  // r1.x <- displace

#line 222
mul r1.x, r1.x, cb1[6].x
sqrt r1.z, r1.x  // r1.z <- streams.PositionWS_id15.z

#line 223
mov r1.xyw, v1.xyxw
dp4 o0.x, r1.xyzw, r0.xyzw
mul r0.xyzw, cb0[1].yyyy, cb1[8].xyzw
mad r0.xyzw, cb1[7].xyzw, cb0[1].xxxx, r0.xyzw
mad r0.xyzw, cb1[9].xyzw, cb0[1].zzzz, r0.xyzw
mad r0.xyzw, cb1[10].xyzw, cb0[1].wwww, r0.xyzw
dp4 o0.y, r1.xyzw, r0.xyzw
mul r0.xyzw, cb0[2].yyyy, cb1[8].xyzw
mad r0.xyzw, cb1[7].xyzw, cb0[2].xxxx, r0.xyzw
mad r0.xyzw, cb1[9].xyzw, cb0[2].zzzz, r0.xyzw
mad r0.xyzw, cb1[10].xyzw, cb0[2].wwww, r0.xyzw
dp4 o0.z, r1.xyzw, r0.xyzw
mul r0.xyzw, cb0[3].yyyy, cb1[8].xyzw
mad r0.xyzw, cb1[7].xyzw, cb0[3].xxxx, r0.xyzw
mad r0.xyzw, cb1[9].xyzw, cb0[3].zzzz, r0.xyzw
mad r0.xyzw, cb1[10].xyzw, cb0[3].wwww, r0.xyzw
dp4 o0.w, r1.xyzw, r0.xyzw

#line 227
mov o1.xy, v0.xyxx
ret 
// Approximately 26 instruction slots used
@G    Geometry => 069ea1f6ce9a267e7a52e8cee79e8978
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerView
// {
//
//   float4x4 View_id22;                // Offset:    0 Size:    64
//   float4x4 ViewInverse_id23;         // Offset:   64 Size:    64 [unused]
//   float4x4 Projection_id24;          // Offset:  128 Size:    64
//   float4x4 ProjectionInverse_id25;   // Offset:  192 Size:    64 [unused]
//   float4x4 ViewProjection_id26;      // Offset:  256 Size:    64 [unused]
//   float2 ProjScreenRay_id27;         // Offset:  320 Size:     8 [unused]
//   float4 Eye_id28;                   // Offset:  336 Size:    16 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id38;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id40;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id42;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id44;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id46;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id48;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id50;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id52;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id54;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id56;     // Offset:   72 Size:     8 [unused]
//   float4 Color_id95;                 // Offset:   80 Size:    16 [unused]
//      = 0x3f800000 0x00000000 0x00000000 0x3f800000 
//   float Amount_id96;                 // Offset:   96 Size:     4 [unused]
//   float4x4 kinect_id97;              // Offset:  112 Size:    64 [unused]
//   float4x4 BoundTrans_id98;          // Offset:  176 Size:    64
//   float4x4 GlobalTrans_id99;         // Offset:  240 Size:    64
//   float SpriteSize_id100;            // Offset:  304 Size:     4
//      = 0x3c23d70a 
//   float ThreshHinten_id101;          // Offset:  308 Size:     4
//      = 0x00000000 
//   float ThreshVorne_id102;           // Offset:  312 Size:     4
//      = 0x00000000 
//   float ThreshUnten_id103;           // Offset:  316 Size:     4
//      = 0x00000000 
//   float ThreshRechts_id104;          // Offset:  320 Size:     4
//      = 0x00000000 
//   float ThreshLinks_id105;           // Offset:  324 Size:     4
//      = 0x00000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerView                           cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION_WS              0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORDQUAD_ID106_SEM     0   xy          1     NONE   float   xy  
// TEXCOORD                 0     zw        1     NONE   float     zw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1.000000, 1.000000, 0, 0},
                              { 1.000000, 1.000000, 0, 0},
                              { -1.000000, -1.000000, 0, 0},
                              { 1.000000, -1.000000, 0, 0},
                              { 1.000000, 0, 1.000000, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 1.000000, 0} }
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[21], immediateIndexed
dcl_input v[1][0].xyzw
dcl_input v[1][1].xy
dcl_temps 4
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_maxout 4
//
// Initial variable locations:
//   m0 <- gsout; 
//   v[0][0].x <- input[0].PositionWS_id15.x; v[0][0].y <- input[0].PositionWS_id15.y; v[0][0].z <- input[0].PositionWS_id15.z; v[0][0].w <- input[0].PositionWS_id15.w; 
//   v[0][1].x <- input[0].TexCoord_id85.x; v[0][1].y <- input[0].TexCoord_id85.y
//
#line 196 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_DrawFXEffect_8da064bdc1f4a78803abce3207c82b9d.hlsl"
dp4 r0.x, v[0][0].xyzw, cb1[15].xyzw
dp4 r0.y, v[0][0].xyzw, cb1[16].xyzw
dp4 r0.z, v[0][0].xyzw, cb1[17].xyzw
dp4 r0.w, v[0][0].xyzw, cb1[18].xyzw
mul r1.xyz, r0.yyyy, cb1[12].xyzx
mad r1.xyz, cb1[11].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb1[13].xyzx, r0.zzzz, r1.xyzx
mad r0.xyz, cb1[14].xyzx, r0.wwww, r0.xyzx  // r0.x <- roomPos.x; r0.y <- roomPos.y; r0.z <- roomPos.z

#line 197
dp4 r1.x, v[0][0].xyzw, cb0[0].xyzw  // r1.x <- viewPos.x
dp4 r1.y, v[0][0].xyzw, cb0[1].xyzw  // r1.y <- viewPos.y
dp4 r1.z, v[0][0].xyzw, cb0[2].xyzw  // r1.z <- viewPos.z
dp4 r1.w, v[0][0].xyzw, cb0[3].xyzw  // r1.w <- viewPos.w

#line 205
lt r0.w, r0.z, cb1[19].y
lt r0.yz, cb1[19].zzwz, r0.zzyz
and r0.y, r0.y, r0.w
lt r0.w, r0.x, cb1[20].x
and r0.y, r0.w, r0.y
lt r0.x, cb1[20].y, r0.x
and r0.x, r0.x, r0.y
and r0.x, r0.z, r0.x

#line 203
mov r2.zw, l(0,0,0,0)  // r2.z <- p.z

#line 199
mov r0.y, l(0)  // r0.y <- i
loop 
  ige r0.z, r0.y, l(4)
  breakc_nz r0.z

#line 205
  if_nz r0.x

#line 202
    mul r0.zw, cb1[19].xxxx, icb[r0.y + 0].xxxy
    mul r2.xy, r0.zwzz, l(0.010000, 0.010000, 0.000000, 0.000000)  // r2.x <- p.x; r2.y <- p.y

#line 203
    add r3.xyzw, r1.xyzw, r2.xyzw
    dp4 r0.z, r3.xyzw, cb0[8].xyzw  // r0.z <- streams.ShadingPosition_id0.x
    dp4 r0.w, r3.xyzw, cb0[9].xyzw  // r0.w <- streams.ShadingPosition_id0.y
    dp4 r2.x, r3.xyzw, cb0[10].xyzw  // r2.x <- streams.ShadingPosition_id0.z
    dp4 r2.y, r3.xyzw, cb0[11].xyzw  // r2.y <- streams.ShadingPosition_id0.w

#line 211
    mov o0.x, r0.z
    mov o0.y, r0.w
    mov o0.z, r2.x
    mov o0.w, r2.y
    mov o1.xy, icb[r0.y + 3].zxzz
    mov o1.zw, v[0][1].xxxy
    emit_stream m0

#line 212
  endif 

#line 213
  iadd r0.y, r0.y, l(1)
endloop 

#line 214
cut_stream m0

#line 215
ret 
// Approximately 45 instruction slots used
@G    Pixel => 0266eb75268d5ae39e91b078fcbd6a2e
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id38;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id40;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id42;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id44;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id46;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id48;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id50;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id52;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id54;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id56;     // Offset:   72 Size:     8 [unused]
//   float4 Color_id95;                 // Offset:   80 Size:    16
//      = 0x3f800000 0x00000000 0x00000000 0x3f800000 
//   float Amount_id96;                 // Offset:   96 Size:     4 [unused]
//   float4x4 kinect_id97;              // Offset:  112 Size:    64 [unused]
//   float4x4 BoundTrans_id98;          // Offset:  176 Size:    64 [unused]
//   float4x4 GlobalTrans_id99;         // Offset:  240 Size:    64 [unused]
//   float SpriteSize_id100;            // Offset:  304 Size:     4 [unused]
//      = 0x3c23d70a 
//   float ThreshHinten_id101;          // Offset:  308 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshVorne_id102;           // Offset:  312 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshUnten_id103;           // Offset:  316 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshRechts_id104;          // Offset:  320 Size:     4 [unused]
//      = 0x00000000 
//   float ThreshLinks_id105;           // Offset:  324 Size:     4 [unused]
//      = 0x00000000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// LinearSampler_id67                sampler      NA          NA             s0      1 
// Texture1_id39                     texture  float4          2d             t0      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORDQUAD_ID106_SEM     0   xy          1     NONE   float   xy  
// TEXCOORD                 0     zw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoordQuad_id106.x; v1.y <- __input__.TexCoordQuad_id106.y; v1.z <- __input__.TexCoord_id85.x; v1.w <- __input__.TexCoord_id85.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 181 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_DrawFXEffect_8da064bdc1f4a78803abce3207c82b9d.hlsl"
add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)  // r0.x <- d.x; r0.y <- d.y

#line 182
dp2 r0.x, r0.xyxx, r0.xyxx
lt r0.x, l(0.250000), r0.x

#line 183
discard_nz r0.x

#line 184
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.zwzz, t0.xyzw, s0  // r0.x <- col.x; r0.y <- col.y; r0.z <- col.z; r0.w <- col.w

#line 185
mul o0.xyzw, r0.xyzw, cb0[5].xyzw

#line 188
ret 
// Approximately 7 instruction slots used
***************************
*************************/
static const float3 QuadPositions_id108[4] = { float3(-1, 1, 0), float3(1, 1, 0), float3(-1, -1, 0), float3(1, -1, 0)};
static const float2 QuadUV_id109[4] = { float2(0, 1), float2(1, 1), float2(0, 0), float2(1, 0)};
struct PS_STREAMS 
{
    float2 TexCoordQuad_id106;
    float2 TexCoord_id85;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoordQuad_id106 : TEXCOORDQUAD_ID106_SEM;
    float2 TexCoord_id85 : TEXCOORD0;
};
struct GS_STREAMS 
{
    float4 PositionWS_id15;
    float2 TexCoord_id85;
    float4 ShadingPosition_id0;
    float2 TexCoordQuad_id106;
};
struct GS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoordQuad_id106 : TEXCOORDQUAD_ID106_SEM;
    float2 TexCoord_id85 : TEXCOORD0;
};
struct GS_INPUT 
{
    float4 PositionWS_id15 : POSITION_WS;
    float2 TexCoord_id85 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float2 TexCoord_id85;
    float4 Position_id14;
    float4 PositionWS_id15;
};
struct VS_OUTPUT 
{
    float4 PositionWS_id15 : POSITION_WS;
    float2 TexCoord_id85 : TEXCOORD0;
};
struct VS_INPUT 
{
    float2 TexCoord_id85 : TEXCOORD0;
    float4 Position_id14 : POSITION;
};
cbuffer PerDraw 
{
    float4x4 World_id29;
    float4x4 WorldInverse_id30;
    float4x4 WorldInverseTranspose_id31;
    float4x4 WorldView_id32;
    float4x4 WorldViewInverse_id33;
    float4x4 WorldViewProjection_id34;
    float3 WorldScale_id35;
    float4 EyeMS_id36;
};
cbuffer PerView 
{
    float4x4 View_id22;
    float4x4 ViewInverse_id23;
    float4x4 Projection_id24;
    float4x4 ProjectionInverse_id25;
    float4x4 ViewProjection_id26;
    float2 ProjScreenRay_id27;
    float4 Eye_id28;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id38;
    float2 Texture1TexelSize_id40;
    float2 Texture2TexelSize_id42;
    float2 Texture3TexelSize_id44;
    float2 Texture4TexelSize_id46;
    float2 Texture5TexelSize_id48;
    float2 Texture6TexelSize_id50;
    float2 Texture7TexelSize_id52;
    float2 Texture8TexelSize_id54;
    float2 Texture9TexelSize_id56;
    float4 Color_id95 = float4(1, 0, 0, 1);
    float Amount_id96;
    float4x4 kinect_id97;
    float4x4 BoundTrans_id98;
    float4x4 GlobalTrans_id99;
    float SpriteSize_id100 = 0.01f;
    float ThreshHinten_id101 = 0;
    float ThreshVorne_id102 = 0;
    float ThreshUnten_id103 = 0;
    float ThreshRechts_id104 = 0;
    float ThreshLinks_id105 = 0;
};
Texture2D Texture0_id37;
Texture2D Texture1_id39;
Texture2D Texture2_id41;
Texture2D Texture3_id43;
Texture2D Texture4_id45;
Texture2D Texture5_id47;
Texture2D Texture6_id49;
Texture2D Texture7_id51;
Texture2D Texture8_id53;
Texture2D Texture9_id55;
TextureCube TextureCube0_id57;
TextureCube TextureCube1_id58;
TextureCube TextureCube2_id59;
TextureCube TextureCube3_id60;
Texture3D Texture3D0_id61;
Texture3D Texture3D1_id62;
Texture3D Texture3D2_id63;
Texture3D Texture3D3_id64;
SamplerState Sampler_id65;
SamplerState PointSampler_id66 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id67 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id68 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id69 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id70 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id71 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id72 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id73 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id74 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id75;
SamplerState Sampler1_id76;
SamplerState Sampler2_id77;
SamplerState Sampler3_id78;
SamplerState Sampler4_id79;
SamplerState Sampler5_id80;
SamplerState Sampler6_id81;
SamplerState Sampler7_id82;
SamplerState Sampler8_id83;
SamplerState Sampler9_id84;
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoordQuad_id106 = __input__.TexCoordQuad_id106;
    streams.TexCoord_id85 = __input__.TexCoord_id85;
    float2 d = streams.TexCoordQuad_id106 - 0.5f;
    if (dot(d, d) > 0.25f)
        discard;
    float4 col = Texture1_id39.Sample(LinearSampler_id67, streams.TexCoord_id85);
    streams.ColorTarget_id2 = col * Color_id95;
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
[maxvertexcount(4)]
void GSMain(point GS_INPUT input[1], inout TriangleStream<GS_OUTPUT> gsout)
{
    GS_STREAMS streams = (GS_STREAMS)0;
    streams.PositionWS_id15 = input[0].PositionWS_id15;
    streams.TexCoord_id85 = input[0].TexCoord_id85;
    float4 roomPos = mul(BoundTrans_id98, mul(streams.PositionWS_id15, GlobalTrans_id99));
    float4 viewPos = mul(streams.PositionWS_id15, View_id22);

    for (int i = 0; i < 4; i++)
    {
        float sizefactor = 1;
        float3 p = QuadPositions_id108[i] * SpriteSize_id100 * 0.01 * sizefactor;
        streams.ShadingPosition_id0 = mul(viewPos + float4(p, 0), Projection_id24);
        streams.TexCoordQuad_id106 = QuadUV_id109[i];
        if (roomPos.z < ThreshHinten_id101 && roomPos.z > ThreshVorne_id102 && roomPos.x < ThreshRechts_id104 && roomPos.x > ThreshLinks_id105 && roomPos.y > ThreshUnten_id103)
        {
            GS_OUTPUT output = (GS_OUTPUT)0;
            output.ShadingPosition_id0 = streams.ShadingPosition_id0;
            output.TexCoordQuad_id106 = streams.TexCoordQuad_id106;
            output.TexCoord_id85 = streams.TexCoord_id85;
            gsout.Append(output);
        }
    }
    gsout.RestartStrip();
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.TexCoord_id85 = __input__.TexCoord_id85;
    streams.Position_id14 = __input__.Position_id14;
    float displace = Texture0_id37.SampleLevel(LinearSampler_id67, streams.TexCoord_id85, 0).r;
    streams.PositionWS_id15 = float4(streams.Position_id14.xy, sqrt(displace * Amount_id96), streams.Position_id14.w);
    streams.PositionWS_id15 = mul(streams.PositionWS_id15, mul(kinect_id97, World_id29));
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.PositionWS_id15 = streams.PositionWS_id15;
    __output__.TexCoord_id85 = streams.TexCoord_id85;
    return __output__;
}
