/**************************
***** Compiler Parameters *****
***************************
@P EffectName: LambertianPrefilteringSHNoComputeEffectPass1
@P   - SphericalHarmonicsParameters.HarmonicsOrder: 3
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id81 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 96]
@C    Texture0TexelSize_id23 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id25 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id27 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id29 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id31 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id33 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id35 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id37 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id39 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id41 => Texturing.Texture9TexelSize
@C    CoefficientIndex_id84 => LambertianPrefilteringSHNoComputePass1.CoefficientIndex
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    PointSampler_id51 => Texturing.PointSampler [Stage: Pixel, Slot: (0-0)]
@R    RadianceMap_id83 => LambertianPrefilteringSHNoComputePass1.RadianceMap [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    LambertianPrefilteringSHNoComputePass1 => 9f4cd63028b2e7131e076fa5aaf2c0dc
@S    ImageEffectShader => 9b7cefba2dd674808bc791525995b495
@S    SpriteBase => 67b12f03dd9d34e76b6fcfb517afba8c
@S    ShaderBase => 01e372056ff6c06edab8e988414a8f75
@S    ShaderBaseStream => 91c0ea8aae0a45ca00578a4084fa3607
@S    Texturing => 6605f68230266eff2bc8b4e8102ede6b
@S    SphericalHarmonicsBase => 1481b648227eced214eae94aea1dd71e
@S    Math => 395aa210901b9e0783594d1b4fb0a441
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id81;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id80.x; v0.y <- __input__.Position_id80.y; v0.z <- __input__.Position_id80.z; v0.w <- __input__.Position_id80.w; 
//   v1.x <- __input__.TexCoord_id70.x; v1.y <- __input__.TexCoord_id70.y; 
//   o1.x <- <VSMain return value>.TexCoord_id70.x; o1.y <- <VSMain return value>.TexCoord_id70.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id8.x; o0.y <- <VSMain return value>.ShadingPosition_id8.y; o0.z <- <VSMain return value>.ShadingPosition_id8.z; o0.w <- <VSMain return value>.ShadingPosition_id8.w
//
#line 213 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_LambertianPrefilteringSHNoComputeEffectPass1_1c3923f7922ed8adac4b74952b5215b4.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 217
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 1073cb23f25ed85e2452bfd381144e29
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id23;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id25;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id27;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id29;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id31;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id33;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id35;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id37;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id39;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id41;     // Offset:   72 Size:     8 [unused]
//   int CoefficientIndex_id84;         // Offset:   80 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PointSampler_id51                 sampler      NA          NA             s0      1 
// RadianceMap_id83                  texture  float4        cube             t0      1 
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0.666667, 0, 0, 0},
                              { 0.666667, 0, 0, 0},
                              { 0.666667, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0.250000, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { 0, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0},
                              { -0.041667, 0, 0, 0} }
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id8.x; v0.y <- __input__.ShadingPosition_id8.y; v0.z <- __input__.ShadingPosition_id8.z; v0.w <- __input__.ShadingPosition_id8.w; 
//   v1.x <- __input__.TexCoord_id70.x; v1.y <- __input__.TexCoord_id70.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id10.x; o0.y <- <PSMain return value>.ColorTarget_id10.y; o0.z <- <PSMain return value>.ColorTarget_id10.z; o0.w <- <PSMain return value>.ColorTarget_id10.w
//
#line 185 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_LambertianPrefilteringSHNoComputeEffectPass1_1c3923f7922ed8adac4b74952b5215b4.hlsl"
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)  // r0.x <- uv.x; r0.y <- uv.y

#line 186
dp2 r0.x, r0.xyxx, r0.xyxx
add r0.x, r0.x, l(1.000000)  // r0.x <- dist

#line 187
sqrt r0.y, r0.x
mul r0.x, r0.x, r0.y
div r0.x, l(4.000000), r0.x  // r0.x <- weight

#line 192
mov r1.x, l(1.000000)
mad r1.yz, v1.yyxy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 1.000000, 1.000000, 0.000000)
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx  // r1.x <- dirVS.x; r1.y <- dirVS.y; r1.z <- dirVS.z

#line 194
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r1.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 158
mul r3.xyz, r1.yzyy, r1.yzxy  // r3.x <- y2; r3.y <- z2

#line 162
mad r0.z, r1.x, r1.x, -r3.x

#line 161
mul r0.w, r0.y, r1.z

#line 162
mul r0.yzw, r0.yyzw, l(0.000000, -0.488603, 0.546274, -1.092548)  // r0.y <- streams.SHBaseValues_id7[3]; r0.z <- streams.SHBaseValues_id7[8]; r0.w <- streams.SHBaseValues_id7[7]

#line 160
mad r1.x, r3.y, l(3.000000), l(-1.000000)
mul r1.w, r3.z, l(1.092548)  // r1.w <- streams.SHBaseValues_id7[4]

#line 159
mul r2.w, r1.y, r1.z

#line 160
mul r1.xyz, r1.xyzx, l(0.315392, -0.488603, 0.488603, 0.000000)  // r1.x <- streams.SHBaseValues_id7[6]; r1.y <- streams.SHBaseValues_id7[1]; r1.z <- streams.SHBaseValues_id7[2]

#line 159
mul r2.w, r2.w, l(-1.092548)  // r2.w <- streams.SHBaseValues_id7[5]

#line 195
movc r3.x, cb0[5].x, l(0), l(0.282095)
ieq r4.xyzw, cb0[5].xxxx, l(1, 2, 3, 8)
and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mad r1.y, r4.x, r1.y, r3.x
mad r1.y, r4.y, r1.z, r1.y
mad r0.y, r4.z, r0.y, r1.y
ieq r5.xyzw, cb0[5].xxxx, l(4, 5, 6, 7)
and r5.xyzw, r5.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mad r0.y, r5.x, r1.w, r0.y
mad r0.y, r5.y, r2.w, r0.y
mad r0.y, r5.z, r1.x, r0.y
mad r0.y, r5.w, r0.w, r0.y
mad r0.y, r4.w, r0.z, r0.y
mov r0.z, cb0[5].x
mul r0.y, r0.y, icb[r0.z + 0].x
mul r1.xyz, r2.xyzx, r0.yyyy

#line 192
mov r2.y, l(-1.000000)
mad r2.xz, v1.xxyx, l(2.000000, 0.000000, -2.000000, 0.000000), l(-1.000000, 0.000000, 1.000000, 0.000000)
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r3.yzw, r0.yyyy, r2.yyzx  // r3.y <- dirVS.x; r3.z <- dirVS.y; r3.w <- dirVS.z

#line 154
mul r6.xy, r3.zwzz, r4.xyxx

#line 195
mad r0.w, r6.x, l(-0.488603), r3.x
mad r0.w, r6.y, l(0.488603), r0.w

#line 155
mul r1.w, r0.y, r4.z

#line 161
mul r0.y, r0.y, r3.w
mul r0.y, r5.w, r0.y

#line 195
mad r0.w, r1.w, l(0.488603), r0.w

#line 158
mul r6.xyz, r3.zwzz, r3.zwyz  // r6.x <- y2; r6.y <- z2
mul r1.w, r5.x, r6.z

#line 195
mad r0.w, r1.w, l(1.092548), r0.w

#line 159
mul r1.w, r3.z, r3.w
mul r1.w, r5.y, r1.w

#line 195
mad r0.w, r1.w, l(-1.092548), r0.w

#line 160
mad r1.w, r6.y, l(3.000000), l(-1.000000)

#line 162
mad r2.w, r3.y, r3.y, -r6.x

#line 194
sample_indexable(texturecube)(float,float,float,float) r3.yzw, r3.yzwy, t0.wxyz, s0  // r3.y <- radiance.x; r3.z <- radiance.y; r3.w <- radiance.z

#line 162
mul r2.w, r2.w, r4.w

#line 160
mul r1.w, r1.w, r5.z

#line 195
mad r0.w, r1.w, l(0.315392), r0.w
mad r0.y, r0.y, l(1.092548), r0.w
mad r0.y, r2.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r3.yzw, r3.yyzw, r0.yyyy
mul r3.yzw, r0.xxxx, r3.yyzw
mad r1.xyz, r1.xyzx, r0.xxxx, r3.yzwy  // r1.x <- result.x; r1.y <- result.y; r1.z <- result.z

#line 192
mad r6.xz, v1.xxyx, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mov r6.y, l(1.000000)
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y

#line 153
mul r0.w, r0.y, r4.x

#line 195
mad r0.w, r0.w, l(-0.488603), r3.x

#line 192
mul r3.yzw, r0.yyyy, r6.xxyz  // r3.y <- dirVS.x; r3.z <- dirVS.y; r3.w <- dirVS.z

#line 159
mul r6.xy, r0.yyyy, r3.ywyy
mul r6.xy, r5.xyxx, r6.xyxx

#line 155
mul r6.zw, r3.wwwy, r4.yyyz

#line 195
mad r0.y, r6.z, l(0.488603), r0.w
mad r0.y, r6.w, l(-0.488603), r0.y
mad r0.y, r6.x, l(1.092548), r0.y
mad r0.y, r6.y, l(-1.092548), r0.y

#line 161
mul r6.xyz, r3.zwyz, r3.zwwz  // r6.x <- y2; r6.y <- z2

#line 160
mad r0.w, r6.y, l(3.000000), l(-1.000000)
mul r0.w, r0.w, r5.z

#line 195
mad r0.y, r0.w, l(0.315392), r0.y

#line 161
mul r0.w, r5.w, r6.z

#line 162
mad r1.w, r3.y, r3.y, -r6.x

#line 194
sample_indexable(texturecube)(float,float,float,float) r3.yzw, r3.yzwy, t0.wxyz, s0  // r3.y <- radiance.x; r3.z <- radiance.y; r3.w <- radiance.z

#line 162
mul r1.w, r1.w, r4.w

#line 195
mad r0.y, r0.w, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r3.yzw, r3.yyzw, r0.yyyy
mad r1.xyz, r3.yzwy, r0.xxxx, r1.xyzx

#line 192
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y

#line 153
mul r0.w, r0.y, r4.x

#line 195
mad r0.w, r0.w, l(0.488603), r3.x

#line 192
mul r2.xyz, r0.yyyy, r2.xyzx  // r2.x <- dirVS.x; r2.y <- dirVS.y; r2.z <- dirVS.z

#line 159
mul r3.yz, r0.yyyy, r2.xxzx
mul r3.yz, r5.xxyx, r3.yyzy

#line 155
mul r6.xy, r2.zxzz, r4.yzyy

#line 195
mad r0.y, r6.x, l(0.488603), r0.w
mad r0.y, r6.y, l(-0.488603), r0.y
mad r0.y, r3.y, l(-1.092548), r0.y
mad r0.y, r3.z, l(1.092548), r0.y

#line 161
mul r3.yzw, r2.yyzx, r2.yyzz  // r3.y <- y2; r3.z <- z2

#line 160
mad r0.w, r3.z, l(3.000000), l(-1.000000)
mul r0.w, r0.w, r5.z

#line 195
mad r0.y, r0.w, l(0.315392), r0.y

#line 161
mul r0.w, r5.w, r3.w

#line 162
mad r1.w, r2.x, r2.x, -r3.y

#line 194
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 162
mul r1.w, r1.w, r4.w

#line 195
mad r0.y, r0.w, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r2.xyz, r2.xyzx, r0.yyyy
mad r1.xyz, r2.xyzx, r0.xxxx, r1.xyzx

#line 192
mad r2.xy, v1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r2.z, l(1.000000)
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y

#line 154
mul r0.w, r0.y, r4.y

#line 192
mul r2.xyz, r0.yyyy, r2.xyzx  // r2.x <- dirVS.x; r2.y <- dirVS.y; r2.z <- dirVS.z

#line 155
mul r3.yz, r2.yyxy, r4.xxzx

#line 195
mad r0.y, r3.y, l(-0.488603), r3.x
mad r0.y, r0.w, l(0.488603), r0.y
mad r0.y, r3.z, l(-0.488603), r0.y

#line 158
mul r3.yzw, r2.yyzy, r2.yyzx  // r3.y <- y2; r3.z <- z2
mul r0.w, r5.x, r3.w

#line 195
mad r0.y, r0.w, l(1.092548), r0.y

#line 161
mul r6.xy, r2.yxyy, r2.zzzz
mul r6.xy, r5.ywyy, r6.xyxx

#line 195
mad r0.y, r6.x, l(-1.092548), r0.y

#line 160
mad r0.w, r3.z, l(3.000000), l(-1.000000)

#line 162
mad r1.w, r2.x, r2.x, -r3.y

#line 194
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 162
mul r1.w, r1.w, r4.w

#line 160
mul r0.w, r0.w, r5.z

#line 195
mad r0.y, r0.w, l(0.315392), r0.y
mad r0.y, r6.y, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r2.xyz, r2.xyzx, r0.yyyy
mad r1.xyz, r2.xyzx, r0.xxxx, r1.xyzx

#line 192
mad r2.xy, v1.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
mov r2.z, l(-1.000000)
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y

#line 154
mul r0.w, r0.y, r4.y

#line 192
mul r2.xyz, r0.yyyy, r2.xyzx  // r2.x <- dirVS.x; r2.y <- dirVS.y; r2.z <- dirVS.z

#line 155
mul r3.yz, r2.yyxy, r4.xxzx

#line 195
mad r0.y, r3.y, l(-0.488603), r3.x
mad r0.y, r0.w, l(-0.488603), r0.y
mad r0.y, r3.z, l(-0.488603), r0.y

#line 158
mul r3.xyz, r2.yzyy, r2.yzxy  // r3.x <- y2; r3.y <- z2
mul r0.w, r5.x, r3.z

#line 195
mad r0.y, r0.w, l(1.092548), r0.y

#line 161
mul r3.zw, r2.yyyx, r2.zzzz
mul r3.zw, r5.yyyw, r3.zzzw

#line 195
mad r0.y, r3.z, l(-1.092548), r0.y

#line 160
mad r0.w, r3.y, l(3.000000), l(-1.000000)

#line 162
mad r1.w, r2.x, r2.x, -r3.x

#line 194
sample_indexable(texturecube)(float,float,float,float) r2.xyz, r2.xyzx, t0.xyzw, s0  // r2.x <- radiance.x; r2.y <- radiance.y; r2.z <- radiance.z

#line 162
mul r1.w, r1.w, r4.w

#line 160
mul r0.w, r0.w, r5.z

#line 195
mad r0.y, r0.w, l(0.315392), r0.y
mad r0.y, r3.w, l(-1.092548), r0.y
mad r0.y, r1.w, l(0.546274), r0.y
mul r0.y, r0.y, icb[r0.z + 0].x
mul r0.yzw, r2.xxyz, r0.yyyy
mad o0.xyz, r0.yzwy, r0.xxxx, r1.xyzx

#line 197
mul o0.w, r0.x, l(6.000000)

#line 206
ret 
// Approximately 175 instruction slots used
***************************
*************************/
static const float PI_id0 = 3.14159265358979323846;
const static int TOrder_id1 = 3;
static const int CoefficientsCount_id2 = TOrder_id1 * TOrder_id1;
static const float PI4_id3 = 4 * PI_id0;
static const float PI16_id4 = 16 * PI_id0;
static const float PI64_id5 = 64 * PI_id0;
static const float SQRT_PI_id6 = 1.77245385090551602729;
static const float A0_id85 = 1.0;
static const float A1_id86 = 2.0 / 3.0;
static const float A2_id87 = 1.0 / 4.0;
static const float A3_id88 = 0.0;
static const float A4_id89 = -1.0 / 24.0;
static const float A_id90[5 * 5] = { A0_id85, A1_id86, A1_id86, A1_id86, A2_id87, A2_id87, A2_id87, A2_id87, A2_id87, A3_id88, A3_id88, A3_id88, A3_id88, A3_id88, A3_id88, A3_id88, A4_id89, A4_id89, A4_id89, A4_id89, A4_id89, A4_id89, A4_id89, A4_id89, A4_id89};
struct PS_STREAMS 
{
    float2 TexCoord_id70;
    float SHBaseValues_id7[CoefficientsCount_id2];
    float4 ColorTarget_id10;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id10 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id8 : SV_Position;
    float2 TexCoord_id70 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id80;
    float2 TexCoord_id70;
    float4 ShadingPosition_id8;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id8 : SV_Position;
    float2 TexCoord_id70 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id80 : POSITION;
    float2 TexCoord_id70 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id81;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id23;
    float2 Texture1TexelSize_id25;
    float2 Texture2TexelSize_id27;
    float2 Texture3TexelSize_id29;
    float2 Texture4TexelSize_id31;
    float2 Texture5TexelSize_id33;
    float2 Texture6TexelSize_id35;
    float2 Texture7TexelSize_id37;
    float2 Texture8TexelSize_id39;
    float2 Texture9TexelSize_id41;
    int CoefficientIndex_id84;
};
Texture2D Texture0_id22;
Texture2D Texture1_id24;
Texture2D Texture2_id26;
Texture2D Texture3_id28;
Texture2D Texture4_id30;
Texture2D Texture5_id32;
Texture2D Texture6_id34;
Texture2D Texture7_id36;
Texture2D Texture8_id38;
Texture2D Texture9_id40;
TextureCube TextureCube0_id42;
TextureCube TextureCube1_id43;
TextureCube TextureCube2_id44;
TextureCube TextureCube3_id45;
Texture3D Texture3D0_id46;
Texture3D Texture3D1_id47;
Texture3D Texture3D2_id48;
Texture3D Texture3D3_id49;
SamplerState Sampler_id50;
SamplerState PointSampler_id51 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id52 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id53 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id54 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id55 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id56 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id57 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id58 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id59 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id60;
SamplerState Sampler1_id61;
SamplerState Sampler2_id62;
SamplerState Sampler3_id63;
SamplerState Sampler4_id64;
SamplerState Sampler5_id65;
SamplerState Sampler6_id66;
SamplerState Sampler7_id67;
SamplerState Sampler8_id68;
SamplerState Sampler9_id69;
TextureCube RadianceMap_id83;
void EvaluateSHBases_id14(inout PS_STREAMS streams, float3 direction)
{
    float x = direction.x;
    float y = direction.y;
    float z = direction.z;
    float x2 = x * x;
    float y2 = y * y;
    float z2 = z * z;
    streams.SHBaseValues_id7[0] = 1.0 / (2.0 * SQRT_PI_id6);

    {
        streams.SHBaseValues_id7[1] = -sqrt(3.0 / PI4_id3) * y;
        streams.SHBaseValues_id7[2] = sqrt(3.0 / PI4_id3) * z;
        streams.SHBaseValues_id7[3] = -sqrt(3.0 / PI4_id3) * x;

        {
            streams.SHBaseValues_id7[4] = sqrt(15.0 / PI4_id3) * y * x;
            streams.SHBaseValues_id7[5] = -sqrt(15.0 / PI4_id3) * y * z;
            streams.SHBaseValues_id7[6] = sqrt(5.0 / PI16_id4) * (3.0 * z2 - 1.0);
            streams.SHBaseValues_id7[7] = -sqrt(15.0 / PI4_id3) * x * z;
            streams.SHBaseValues_id7[8] = sqrt(15.0 / PI16_id4) * (x2 - y2);
        }
    }
}
float3 uvToDirectionVS_id18(float u, float v, int viewIndex)
{
    if (viewIndex == 0)
        return float3(1, -v, -u);
    if (viewIndex == 1)
        return float3(-1, -v, u);
    if (viewIndex == 2)
        return float3(u, 1, v);
    if (viewIndex == 3)
        return float3(u, -1, -v);
    if (viewIndex == 4)
        return float3(u, -v, 1);
    if (viewIndex == 5)
        return float3(-u, -v, -1);
    return 0;
}
float4 Shading_id19(inout PS_STREAMS streams)
{
    float3 result = 0;
    float2 uv = streams.TexCoord_id70 * 2.0 - 1.0;
    float dist = 1.0f + dot(uv, uv);
    float weight = 4.0f / (sqrt(dist) * dist);

    [unroll]
    for (int faceIndex = 0; faceIndex < 6; faceIndex++)
    {
        float3 dirVS = normalize(uvToDirectionVS_id18(uv.x, uv.y, faceIndex));
        EvaluateSHBases_id14(streams, dirVS);
        float3 radiance = RadianceMap_id83.Sample(PointSampler_id51, dirVS).xyz;
        result += A_id90[CoefficientIndex_id84] * streams.SHBaseValues_id7[CoefficientIndex_id84] * radiance * weight;
    }
    return float4(result, weight * 6);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id70 = __input__.TexCoord_id70;
    streams.ColorTarget_id10 = Shading_id19(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id10 = streams.ColorTarget_id10;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id80 = __input__.Position_id80;
    streams.TexCoord_id70 = __input__.TexCoord_id70;
    streams.ShadingPosition_id8 = mul(streams.Position_id80, MatrixTransform_id81);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id8 = streams.ShadingPosition_id8;
    __output__.TexCoord_id70 = streams.TexCoord_id70;
    return __output__;
}
