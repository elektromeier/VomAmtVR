/**************************
***** Compiler Parameters *****
***************************
@P EffectName: TextureFXEffect
@P   - EffectNodeBase.EffectNodeBaseShader: mixin Noise_TextureFX
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer Globals [Size: 112]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    Scale_id87 => Noise_TextureFX.Scale
@C    Offset_id88 => Noise_TextureFX.Offset
@C    Z_id89 => Noise_TextureFX.Z
@C    Type_id90 => Noise_TextureFX.Type
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    Noise_TextureFX => 2464069f7c290692282b2b90da7dcf9a
@S    TextureFX => fff3e6417248c31cbfcb2653ed03a819
@S    ImageEffectShader => 9b7cefba2dd674808bc791525995b495
@S    SpriteBase => 67b12f03dd9d34e76b6fcfb517afba8c
@S    ShaderBase => 01e372056ff6c06edab8e988414a8f75
@S    ShaderBaseStream => 91c0ea8aae0a45ca00578a4084fa3607
@S    Texturing => 6605f68230266eff2bc8b4e8102ede6b
@S    Camera => 68de88612bfb3b0a92e9082b82b993a9
@S    ShaderUtils => 3fa49f5c698c1515f7e4555e086f875d
@S    HappyNoise => 0cdacd2d558b31367abe5bc87b02b3dd
@S    HappyCalc => 80c632edb90a7d1b41a5d390889d19c2
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 428 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_TextureFXEffect_fd96f538edae72818dd445ab56cab0e1.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 432
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => f57a11e01f0424298f6ea406c8a0f1c6
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float2 Scale_id87;                 // Offset:   80 Size:     8
//      = 0x40800000 0x40800000 
//   float2 Offset_id88;                // Offset:   88 Size:     8
//   float Z_id89;                      // Offset:   96 Size:     4
//   uint Type_id90;                    // Offset:  100 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 17
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 392 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_TextureFXEffect_fd96f538edae72818dd445ab56cab0e1.hlsl"
switch cb0[6].y

#line 395
  case l(0)

#line 396
  add r2.xyzw, v1.xyxy, cb0[5].zwzw
  mul r1.yz, r2.zzwz, cb0[5].xxyx

#line 372
  round_ni r3.xy, r1.yzyy  // r3.x <- Pi.x; r3.y <- Pi.y

#line 373
  add r3.zw, r3.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  mad r2.xyzw, r2.xyzw, cb0[5].xyxy, -r3.xyzw  // r2.x <- Pf_Pfmin1.x; r2.y <- Pf_Pfmin1.y; r2.z <- Pf_Pfmin1.z; r2.w <- Pf_Pfmin1.w

#line 375
  mul r4.xyzw, r3.xyzw, l(0.014085, 0.014085, 0.014085, 0.014085)
  round_ni r4.xyzw, r4.xyzw
  mad r3.xyzw, -r4.xyzw, l(71.000000, 71.000000, 71.000000, 71.000000), r3.xyzw  // r3.x <- Pt.x; r3.y <- Pt.y; r3.z <- Pt.z; r3.w <- Pt.w

#line 376
  add r3.xyzw, r3.xyzw, l(26.000000, 161.000000, 26.000000, 161.000000)

#line 377
  mul r3.xyzw, r3.xyzw, r3.xyzw

#line 378
  mul r3.xyzw, r3.yyww, r3.xzxz

#line 379
  mul r4.xyzw, r3.xyzw, l(0.001051, 0.001051, 0.001051, 0.001051)
  frc r4.xyzw, r4.xyzw  // r4.x <- hash_x.x; r4.y <- hash_x.y; r4.z <- hash_x.z; r4.w <- hash_x.w

#line 380
  mul r3.xyzw, r3.xyzw, l(0.001555, 0.001555, 0.001555, 0.001555)
  frc r3.xyzw, r3.xyzw  // r3.x <- hash_y.x; r3.y <- hash_y.y; r3.z <- hash_y.z; r3.w <- hash_y.w

#line 381
  add r4.xyzw, r4.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r4.x <- grad_x.x; r4.y <- grad_x.y; r4.z <- grad_x.z; r4.w <- grad_x.w

#line 382
  add r3.xyzw, r3.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r3.x <- grad_y.x; r3.y <- grad_y.y; r3.z <- grad_y.z; r3.w <- grad_y.w

#line 383
  mul r5.xyzw, r3.xyzw, r3.xyzw
  mad r5.xyzw, r4.xyzw, r4.xyzw, r5.xyzw
  rsq r5.xyzw, r5.xyzw
  mul r3.xyzw, r2.yyww, r3.xyzw
  mad r3.xyzw, r4.xyzw, r2.xzxz, r3.xyzw
  mul r3.xyzw, r3.xyzw, r5.xyzw  // r3.x <- grad_results.x; r3.y <- grad_results.y; r3.z <- grad_results.z; r3.w <- grad_results.w

#line 384
  mul r3.xyzw, r3.xyzw, l(1.414214, 1.414214, 1.414214, 1.414214)

#line 385
  mul r1.yz, r2.xxyx, r2.xxyx
  mul r1.yz, r2.xxyx, r1.yyzy
  mad r2.zw, r2.xxxy, l(0.000000, 0.000000, 6.000000, 6.000000), l(0.000000, 0.000000, -15.000000, -15.000000)
  mad r2.xy, r2.xyxx, r2.zwzz, l(10.000000, 10.000000, 0.000000, 0.000000)
  mul r4.xy, r1.yzyy, r2.xyxx  // r4.x <- blend.x; r4.y <- blend.y

#line 387
  mad r4.zw, -r1.yyyz, r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r2.xyzw, r4.wwyy, r4.zxzx
  dp4 r0.w, r3.xyzw, r2.xyzw  // r0.w <- <perlin_id63 return value>

#line 396
  mov r0.xyzw, r0.wwww  // r0.x <- <Shading_id99 return value>.x; r0.y <- <Shading_id99 return value>.y; r0.z <- <Shading_id99 return value>.z; r0.w <- <Shading_id99 return value>.w
  mov r1.x, l(-1)
  break 

#line 397
  case l(1)

#line 398
  add r1.yz, v1.xxyx, cb0[5].zzwz
  mul r2.xy, r1.yzyy, cb0[5].xyxx

#line 312
  round_ni r3.xy, r2.xyxx  // r3.x <- Pi.x; r3.y <- Pi.y
  round_ni r3.z, cb0[6].x  // r3.z <- Pi.z

#line 313
  mov r2.z, cb0[6].x
  add r2.xyz, r2.xyzx, -r3.xyzx  // r2.x <- Pf.x; r2.y <- Pf.y; r2.z <- Pf.z

#line 314
  add r1.y, r2.z, l(-1.000000)  // r1.y <- Pf_min1.z

#line 315
  mul r4.xyz, r3.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r4.xyz, r4.xyzx
  mad r3.xyz, -r4.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r3.xyzx

#line 316
  ge r4.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r3.xyzx
  and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r5.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r4.xyz, r4.xyzx, r5.xyzx  // r4.x <- Pi_inc1.x; r4.y <- Pi_inc1.y; r4.z <- Pi_inc1.z

#line 317
  mov r5.xy, r3.xyxx
  mov r5.zw, r4.xxxy
  add r5.xyzw, r5.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r5.x <- Pt.x; r5.y <- Pt.y; r5.z <- Pt.z; r5.w <- Pt.w

#line 318
  mul r5.xyzw, r5.xyzw, r5.xyzw

#line 319
  mul r5.xyzw, r5.yyww, r5.xzxz

#line 320
  mad r3.xyz, r3.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx  // r3.x <- lowz_mod.x; r3.y <- lowz_mod.y; r3.z <- lowz_mod.z

#line 321
  mad r4.xyz, r4.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx  // r4.x <- highz_mod.x; r4.y <- highz_mod.y; r4.z <- highz_mod.z

#line 322
  mul r6.xyzw, r3.xxxx, r5.xyzw
  frc r6.xyzw, r6.xyzw  // r6.x <- hashx0.x; r6.y <- hashx0.y; r6.z <- hashx0.z; r6.w <- hashx0.w

#line 323
  mul r7.xyzw, r4.xxxx, r5.xyzw
  frc r7.xyzw, r7.xyzw  // r7.x <- hashx1.x; r7.y <- hashx1.y; r7.z <- hashx1.z; r7.w <- hashx1.w

#line 324
  mul r8.xyzw, r3.yyyy, r5.xyzw
  frc r8.xyzw, r8.xyzw  // r8.x <- hashy0.x; r8.y <- hashy0.y; r8.z <- hashy0.z; r8.w <- hashy0.w

#line 325
  mul r9.xyzw, r4.yyyy, r5.xyzw
  frc r9.xyzw, r9.xyzw  // r9.x <- hashy1.x; r9.y <- hashy1.y; r9.z <- hashy1.z; r9.w <- hashy1.w

#line 326
  mul r3.xyzw, r3.zzzz, r5.xyzw
  frc r3.xyzw, r3.xyzw  // r3.x <- hashz0.x; r3.y <- hashz0.y; r3.z <- hashz0.z; r3.w <- hashz0.w

#line 327
  mul r4.xyzw, r4.zzzz, r5.xyzw
  frc r4.xyzw, r4.xyzw  // r4.x <- hashz1.x; r4.y <- hashz1.y; r4.z <- hashz1.z; r4.w <- hashz1.w

#line 328
  add r5.xyzw, r6.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r5.x <- grad_x0.x; r5.y <- grad_x0.y; r5.z <- grad_x0.z; r5.w <- grad_x0.w

#line 329
  add r6.xyzw, r8.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r6.x <- grad_y0.x; r6.y <- grad_y0.y; r6.z <- grad_y0.z; r6.w <- grad_y0.w

#line 330
  add r3.xyzw, r3.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r3.x <- grad_z0.x; r3.y <- grad_z0.y; r3.z <- grad_z0.z; r3.w <- grad_z0.w

#line 331
  add r7.xyzw, r7.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r7.x <- grad_x1.x; r7.y <- grad_x1.y; r7.z <- grad_x1.z; r7.w <- grad_x1.w

#line 332
  add r8.xyzw, r9.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r8.x <- grad_y1.x; r8.y <- grad_y1.y; r8.z <- grad_y1.z; r8.w <- grad_y1.w

#line 333
  add r4.xyzw, r4.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r4.x <- grad_z1.x; r4.y <- grad_z1.y; r4.z <- grad_z1.z; r4.w <- grad_z1.w

#line 334
  mul r9.xyzw, r6.xyzw, r6.xyzw
  mad r9.xyzw, r5.xyzw, r5.xyzw, r9.xyzw
  mad r9.xyzw, r3.xyzw, r3.xyzw, r9.xyzw
  rsq r9.xyzw, r9.xyzw  // r9.x <- norm_0.x; r9.y <- norm_0.y; r9.z <- norm_0.z; r9.w <- norm_0.w

#line 335
  mul r10.xyzw, r8.xyzw, r8.xyzw
  mad r10.xyzw, r7.xyzw, r7.xyzw, r10.xyzw
  mad r10.xyzw, r4.xyzw, r4.xyzw, r10.xyzw
  rsq r10.xyzw, r10.xyzw  // r10.x <- norm_1.x; r10.y <- norm_1.y; r10.z <- norm_1.z; r10.w <- norm_1.w

#line 336
  mul r5.xyzw, r5.xyzw, r9.xyzw

#line 337
  mul r6.xyzw, r6.xyzw, r9.xyzw

#line 338
  mul r3.xyzw, r3.xywz, r9.xywz  // r3.z <- grad_z0.w; r3.w <- grad_z0.z

#line 339
  mul r7.xyzw, r7.xyzw, r10.xyzw

#line 340
  mul r8.xyzw, r8.xyzw, r10.xyzw

#line 341
  mul r4.xyzw, r4.xywz, r10.xywz  // r4.z <- grad_z1.w; r4.w <- grad_z1.z

#line 342
  add r2.w, r2.x, l(-1.000000)
  add r9.xyzw, r2.yyyy, l(0.000000, 0.000000, -1.000000, -1.000000)
  mul r10.xyzw, r6.xyzw, r9.yyww
  mad r10.xyzw, r2.xwxw, r5.xyzw, r10.xyzw
  mad r10.xyzw, r2.zzzz, r3.xywz, r10.xyzw  // r10.x <- dotval_0.x; r10.y <- dotval_0.y; r10.z <- dotval_0.z; r10.w <- dotval_0.w

#line 343
  mul r9.xyzw, r8.xyzw, r9.xyzw
  mad r9.xyzw, r2.xwxw, r7.xyzw, r9.xyzw
  mad r9.xyzw, r1.yyyy, r4.xywz, r9.xyzw  // r9.x <- dotval_1.x; r9.y <- dotval_1.y; r9.z <- dotval_1.z; r9.w <- dotval_1.w

#line 344
  mul r1.yzw, r2.xxyz, r2.xxyz
  mul r11.xyz, r2.xyzx, r1.yzwy
  mad r12.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-15.000000, -15.000000, -15.000000, 0.000000)
  mad r12.xyz, r2.xyzx, r12.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mul r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- blend.x; r11.y <- blend.y; r11.z <- blend.z

#line 345
  mad r12.xyz, r2.xyzx, l(30.000000, 30.000000, 30.000000, 0.000000), l(-60.000000, -60.000000, -60.000000, 0.000000)
  mad r2.xyz, r2.xyzx, r12.xyzx, l(30.000000, 30.000000, 30.000000, 0.000000)
  mul r1.yzw, r1.yyzw, r2.xxyz  // r1.y <- blendDeriv.x; r1.z <- blendDeriv.y; r1.w <- blendDeriv.z

#line 354
  mov r2.x, r10.x
  mov r2.y, r5.x
  mov r2.z, r6.x
  mov r2.w, r3.x
  mov r12.x, r10.y
  mov r12.y, r5.y
  mov r12.z, r6.y
  mov r12.w, r3.y
  add r12.xyzw, -r2.xyzw, r12.xyzw  // r12.x <- k0_gk0.x; r12.y <- k0_gk0.y; r12.z <- k0_gk0.z; r12.w <- k0_gk0.w

#line 355
  mov r13.w, r10.z
  mov r13.x, r5.z
  mov r13.y, r6.z
  mov r13.z, r3.w
  add r14.xyzw, -r2.xyzw, r13.wxyz  // r14.x <- k1_gk1.x; r14.y <- k1_gk1.y; r14.z <- k1_gk1.z; r14.w <- k1_gk1.w

#line 356
  mov r15.x, r9.x
  mov r15.y, r7.x
  mov r15.z, r8.x
  mov r15.w, r4.x
  add r16.xyzw, -r2.xyzw, r15.xyzw  // r16.x <- k2_gk2.x; r16.y <- k2_gk2.y; r16.z <- k2_gk2.z; r16.w <- k2_gk2.w

#line 357
  mov r3.w, r10.w
  mov r3.x, r5.w
  mov r3.y, r6.w
  add r3.xyzw, -r13.xyzw, r3.xyzw
  add r3.xyzw, -r12.yzwx, r3.xyzw  // r3.x <- k3_gk3.y; r3.y <- k3_gk3.z; r3.z <- k3_gk3.w; r3.w <- k3_gk3.x

#line 358
  mov r5.w, r9.y
  mov r5.x, r7.y
  mov r5.y, r8.y
  mov r5.z, r4.y
  add r5.xyzw, -r15.yzwx, r5.xyzw
  add r6.xyzw, -r12.xyzw, r5.wxyz  // r6.x <- k4_gk4.x; r6.y <- k4_gk4.y; r6.z <- k4_gk4.z; r6.w <- k4_gk4.w

#line 359
  mov r10.w, r9.z
  mov r10.x, r7.z
  mov r10.y, r8.z
  mov r10.z, r4.w
  add r13.xyzw, -r15.xyzw, r10.wxyz
  add r13.xyzw, -r14.yzxw, r13.yzxw  // r13.x <- k5_gk5.y; r13.y <- k5_gk5.z; r13.z <- k5_gk5.x; r13.w <- k5_gk5.w

#line 360
  mov r4.w, r9.w
  mov r4.x, r7.w
  mov r4.y, r8.w
  add r4.xyzw, -r10.xyzw, r4.xyzw
  add r4.xyzw, -r5.xyzw, r4.xyzw
  add r4.xyzw, -r3.xyzw, r4.xyzw  // r4.x <- k6_gk6.y; r4.y <- k6_gk6.z; r4.z <- k6_gk6.w; r4.w <- k6_gk6.x

#line 365
  mul r5.y, r3.w, r11.y

#line 364
  mad r3.xyz, r11.yyyy, r3.xyzx, r12.yzwy
  mad r2.xyz, r11.xxxx, r3.xyzx, r2.yzwy
  mad r3.xyz, r11.zzzz, r13.xywx, r14.yzwy
  mad r2.xyz, r11.yyyy, r3.xyzx, r2.xyzx

#line 365
  mul r7.w, r4.w, r11.y

#line 364
  mad r3.xyz, r11.yyyy, r4.xyzx, r6.yzwy
  mad r3.xyz, r11.xxxx, r3.xyzx, r16.yzwy
  mad r2.xyz, r11.zzzz, r3.xyzx, r2.xyzx  // r2.x <- result.y; r2.y <- result.z; r2.z <- result.w

#line 365
  mov r7.z, r6.x
  mul r5.zw, r11.zzzz, r7.zzzw
  mov r5.x, r12.x
  dp4 r1.y, r5.xyzw, r1.yyyy
  add r3.x, r1.y, r2.x  // r3.x <- result.y

#line 366
  mul r14.y, r11.x, r3.w
  mul r13.w, r11.x, r4.w
  mul r14.zw, r11.zzzz, r13.zzzw
  dp4 r1.y, r14.xyzw, r1.zzzz
  add r3.y, r1.y, r2.y  // r3.y <- result.z

#line 367
  mul r16.y, r11.x, r6.x
  mul r16.zw, r11.yyyy, r13.zzzw
  dp4 r1.y, r16.xyzw, r1.wwww
  add r3.z, r1.y, r2.z  // r3.z <- result.w

#line 368
  mul r0.xyz, r3.xyzx, l(1.154701, 1.154701, 1.154701, 0.000000)  // r0.x <- <perlinGrad_id66 return value>.y; r0.y <- <perlinGrad_id66 return value>.z; r0.z <- <perlinGrad_id66 return value>.w

#line 398
  mov r0.w, l(1.000000)
  mov r1.x, l(-1)
  break 

#line 399
  case l(2)

#line 400
  add r1.yz, v1.xxyx, cb0[5].zzwz
  mul r2.xy, r1.yzyy, cb0[5].xyxx

#line 298
  round_ni r2.xy, r2.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y

#line 299
  mad r1.yz, r1.yyzy, cb0[5].xxyx, -r2.xxyx  // r1.y <- Pf.x; r1.z <- Pf.y

#line 301
  add r2.zw, r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.xyzw, r2.xyzw, l(0.014085, 0.014085, 0.014085, 0.014085)
  round_ni r3.xyzw, r3.xyzw
  mad r2.xyzw, -r3.xyzw, l(71.000000, 71.000000, 71.000000, 71.000000), r2.xyzw  // r2.x <- Pt.x; r2.y <- Pt.y; r2.z <- Pt.z; r2.w <- Pt.w

#line 302
  add r2.xyzw, r2.xyzw, l(26.000000, 161.000000, 26.000000, 161.000000)

#line 303
  mul r2.xyzw, r2.xyzw, r2.xyzw

#line 304
  mul r2.xyzw, r2.yyww, r2.xzxz

#line 305
  mul r2.xyzw, r2.xyzw, l(0.001051, 0.001051, 0.001051, 0.001051)
  frc r2.xyzw, r2.xyzw  // r2.x <- hash.x; r2.y <- hash.y; r2.z <- hash.z; r2.w <- hash.w

#line 306
  mul r3.xy, r1.yzyy, r1.yzyy
  mul r3.xy, r1.yzyy, r3.xyxx
  mad r3.zw, r1.yyyz, l(0.000000, 0.000000, 6.000000, 6.000000), l(0.000000, 0.000000, -15.000000, -15.000000)
  mad r1.yz, r1.yyzy, r3.zzwz, l(0.000000, 10.000000, 10.000000, 0.000000)
  mul r4.xy, r1.yzyy, r3.xyxx  // r4.x <- blend.x; r4.y <- blend.y

#line 308
  mad r4.zw, -r3.xxxy, r1.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.xyzw, r4.wwyy, r4.zxzx
  dp4 r0.xyzw, r2.xyzw, r3.xyzw  // r0.x <- <Shading_id99 return value>.x; r0.y <- <Shading_id99 return value>.y; r0.z <- <Shading_id99 return value>.z; r0.w <- <Shading_id99 return value>.w

#line 400
  mov r1.x, l(-1)
  break 

#line 401
  case l(3)

#line 402
  add r1.yz, v1.xxyx, cb0[5].zzwz
  mul r2.xy, r1.yzyy, cb0[5].xyxx

#line 277
  round_ni r3.xy, r2.xyxx  // r3.x <- Pi.x; r3.y <- Pi.y
  round_ni r3.z, cb0[6].x  // r3.z <- Pi.z

#line 278
  mov r2.z, cb0[6].x
  add r1.yzw, r2.xxyz, -r3.xxyz  // r1.y <- Pf.x; r1.z <- Pf.y; r1.w <- Pf.z

#line 280
  mul r2.xyz, r3.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r2.xyz, r2.xyzx
  mad r2.xyz, -r2.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r3.xyzx  // r2.x <- Pi.x; r2.y <- Pi.y; r2.z <- Pi.z

#line 281
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 282
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 283
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 284
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 285
  mov r2.w, r3.z
  mad r2.xy, r2.zwzz, l(48.500389, 48.500389, 0.000000, 0.000000), l(635.298706, 635.298706, 0.000000, 0.000000)
  div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyxx  // r2.x <- hash_mod.x; r2.y <- hash_mod.y

#line 286
  mul r3.xyzw, r2.xxxx, r4.xyzw
  frc r3.xyzw, r3.xyzw  // r3.x <- hash_lowz.x; r3.y <- hash_lowz.y; r3.z <- hash_lowz.z; r3.w <- hash_lowz.w

#line 287
  mul r2.xyzw, r2.yyyy, r4.xyzw
  frc r2.xyzw, r2.xyzw  // r2.x <- hash_highz.x; r2.y <- hash_highz.y; r2.z <- hash_highz.z; r2.w <- hash_highz.w

#line 288
  mul r4.xyz, r1.yzwy, r1.yzwy
  mul r5.xyz, r1.yzwy, r4.xyzx
  mad r6.xyz, r1.yzwy, l(6.000000, 6.000000, 6.000000, 0.000000), l(-15.000000, -15.000000, -15.000000, 0.000000)
  mad r6.xyz, r1.yzwy, r6.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
  mul r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- blend.x; r5.y <- blend.y; r5.z <- blend.z

#line 289
  mad r6.xyz, r1.yzwy, l(30.000000, 30.000000, 30.000000, 0.000000), l(-60.000000, -60.000000, -60.000000, 0.000000)
  mad r1.yzw, r1.yyzw, r6.xxyz, l(0.000000, 30.000000, 30.000000, 30.000000)
  mul r1.yzw, r1.yyzw, r4.xxyz  // r1.y <- blendDeriv.x; r1.z <- blendDeriv.y; r1.w <- blendDeriv.z

#line 290
  add r4.xyzw, -r3.xyzw, r2.xyzw
  mad r4.xyzw, r5.zzzz, r4.xyzw, r3.xyzw  // r4.x <- res0.x; r4.y <- res0.y; r4.z <- res0.z; r4.w <- res0.w

#line 291
  add r6.xyzw, -r4.xyxz, r4.zwyw
  mad r4.xyzw, r5.yxyx, r6.ywxz, r4.yzxx  // r4.z <- res1.x; r4.x <- res1.y; r4.w <- res1.z; r4.y <- res1.w

#line 292
  mov r6.xy, r3.xyxx
  mov r6.zw, r2.xxxy
  mov r2.xy, r3.zwzz
  add r2.xyzw, -r6.xyzw, r2.xyzw
  mad r2.xyzw, r5.yyyy, r2.xyzw, r6.xyzw  // r2.x <- res3.x; r2.y <- res3.y; r2.z <- res3.z; r2.w <- res3.w

#line 293
  add r2.yw, -r2.xxxz, r2.yyyw
  mad r2.xy, r5.xxxx, r2.ywyy, r2.xzxx  // r2.x <- res4.x; r2.y <- res4.y

#line 294
  mov r2.zw, r4.zzzw
  mov r4.z, r2.y
  add r2.xyz, -r2.zwxz, r4.xyzx
  mul r0.xyz, r1.yzwy, r2.xyzx  // r0.x <- <valueNoiseGrad_id57 return value>.y; r0.y <- <valueNoiseGrad_id57 return value>.z; r0.z <- <valueNoiseGrad_id57 return value>.w

#line 402
  mov r0.w, l(1.000000)
  mov r1.x, l(-1)
  break 

#line 403
  case l(4)

#line 404
  add r1.yz, v1.xxyx, cb0[5].zzwz
  mul r1.yz, r1.yyzy, cb0[5].xxyx

#line 254
  mul r2.xy, r1.yzyy, l(0.707107, 0.707107, 0.000000, 0.000000)  // r2.x <- p.x; r2.y <- p.y

#line 255
  dp2 r1.w, r2.xyxx, l(0.366025, 0.366025, 0.000000, 0.000000)
  mad r2.xy, r1.yzyy, l(0.707107, 0.707107, 0.000000, 0.000000), r1.wwww
  round_ni r2.xy, r2.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y

#line 257
  add r2.zw, r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.xyzw, r2.xyzw, l(0.014085, 0.014085, 0.014085, 0.014085)
  round_ni r3.xyzw, r3.xyzw
  mad r3.xyzw, -r3.xyzw, l(71.000000, 71.000000, 71.000000, 71.000000), r2.xyzw  // r3.x <- Pt.x; r3.y <- Pt.y; r3.z <- Pt.z; r3.w <- Pt.w

#line 258
  add r3.xyzw, r3.xyzw, l(26.000000, 161.000000, 26.000000, 161.000000)

#line 259
  mul r3.xyzw, r3.xyzw, r3.xyzw

#line 260
  mul r3.xyzw, r3.yyww, r3.xzxz

#line 261
  mul r4.xyzw, r3.xyzw, l(0.001051, 0.001051, 0.001051, 0.001051)
  frc r4.xyzw, r4.xyzw  // r4.x <- hash_x.x; r4.y <- hash_x.y; r4.z <- hash_x.z; r4.w <- hash_x.w

#line 262
  mul r3.xyzw, r3.xyzw, l(0.001555, 0.001555, 0.001555, 0.001555)
  frc r3.xyzw, r3.xyzw  // r3.x <- hash_y.x; r3.y <- hash_y.y; r3.z <- hash_y.z; r3.w <- hash_y.w

#line 263
  dp2 r1.w, r2.xyxx, l(0.211325, 0.211325, 0.000000, 0.000000)
  add r2.xy, -r1.wwww, r2.xyxx
  mad r2.xy, -r1.yzyy, l(0.707107, 0.707107, 0.000000, 0.000000), r2.xyxx  // r2.x <- v0.x; r2.y <- v0.y

#line 264
  lt r1.y, r2.x, r2.y
  mov r5.xy, l(0.788675,-0.211325,0,0)
  mov r5.z, r4.y
  mov r5.w, r3.y
  mov r6.xy, l(-0.211325,0.788675,0,0)
  mov r6.z, r4.z
  mov r6.w, r3.z
  movc r5.xyzw, r1.yyyy, r5.xyzw, r6.xyzw  // r5.x <- v1pos_v1hash.x; r5.y <- v1pos_v1hash.y; r5.z <- v1pos_v1hash.z; r5.w <- v1pos_v1hash.w

#line 265
  add r6.xy, r2.xyxx, r5.xyxx  // r6.x <- v12.x; r6.y <- v12.y

#line 266
  mov r5.xy, r4.xwxx
  add r1.yzw, r5.xxzy, l(0.000000, -0.499990, -0.499990, -0.499990)  // r1.y <- grad_x.x; r1.z <- grad_x.y; r1.w <- grad_x.z

#line 267
  mov r5.xy, r3.xwxx
  add r3.xyz, r5.xwyx, l(-0.499990, -0.499990, -0.499990, 0.000000)  // r3.x <- grad_y.x; r3.y <- grad_y.y; r3.z <- grad_y.z

#line 268
  mul r4.xyz, r3.xyzx, r3.xyzx
  mad r4.xyz, r1.yzwy, r1.yzwy, r4.xyzx
  rsq r4.xyz, r4.xyzx
  mov r2.z, r6.x
  add r2.w, r2.x, l(0.577350)
  add r6.xz, r2.yyyy, l(0.000000, 0.000000, 0.577350, 0.000000)
  mul r3.xyz, r3.xyzx, r6.xyzx
  mad r1.yzw, r1.yyzw, r2.xxzw, r3.xxyz
  mul r1.yzw, r1.yyzw, r4.xxyz  // r1.y <- grad_results.x; r1.z <- grad_results.y; r1.w <- grad_results.z

#line 270
  mul r3.xyz, r6.xyzx, r6.xyzx
  mad r2.xyz, r2.xzwx, r2.xzwx, r3.xyzx  // r2.x <- m.x; r2.y <- m.y; r2.z <- m.z

#line 271
  add r2.xyz, -r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // r2.x <- m.x; r2.y <- m.y; r2.z <- m.z

#line 272
  mul r2.xyz, r2.xyzx, r2.xyzx

#line 273
  mul r2.xyz, r2.xyzx, r2.xyzx
  dp3 r1.y, r2.xyzx, r1.yzwy
  mul r0.xyzw, r1.yyyy, l(99.204338, 99.204338, 99.204338, 99.204338)  // r0.w <- <simplex_id72 return value>

#line 404
  mov r1.x, l(-1)
  break 

#line 405
  case l(5)

#line 406
  add r1.yz, v1.xxyx, cb0[5].zzwz
  mul r2.xy, r1.yzyy, cb0[5].xyxx

#line 206
  mov r2.z, cb0[6].x
  mul r1.yzw, r2.xxyz, l(0.000000, 0.707107, 0.707107, 0.707107)  // r1.y <- p.x; r1.z <- p.y; r1.w <- p.z

#line 207
  dp3 r1.y, r1.yzwy, l(0.333333, 0.333333, 0.333333, 0.000000)
  mad r1.yzw, r2.xxyz, l(0.000000, 0.707107, 0.707107, 0.707107), r1.yyyy
  round_ni r1.yzw, r1.yyzw  // r1.y <- Pi.x; r1.z <- Pi.y; r1.w <- Pi.z

#line 208
  mad r2.xyz, r2.xyzx, l(0.707107, 0.707107, 0.707107, 0.000000), -r1.yzwy
  dp3 r2.w, r1.yzwy, l(0.166667, 0.166667, 0.166667, 0.000000)
  add r2.xyz, r2.wwww, r2.xyzx  // r2.x <- x0.x; r2.y <- x0.y; r2.z <- x0.z

#line 209
  ge r3.xyz, r2.zxyz, r2.xyzx
  and r4.xyz, r3.yzxy, l(0x3f800000, 0x3f800000, 0x3f800000, 0)  // r4.x <- g.x; r4.y <- g.y; r4.z <- g.z

#line 210
  movc r3.xyz, r3.xyzx, l(0,0,0,0), l(1.000000,1.000000,1.000000,0)  // r3.x <- l.z; r3.y <- l.x; r3.z <- l.y

#line 211
  min r5.xyz, r3.xyzx, r4.xyzx  // r5.x <- Pi_1.x; r5.y <- Pi_1.y; r5.z <- Pi_1.z

#line 212
  max r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_2.x; r3.y <- Pi_2.y; r3.z <- Pi_2.z

#line 213
  add r4.xyz, r2.xyzx, -r5.xyzx
  add r4.xyz, r4.xyzx, l(0.166667, 0.166667, 0.166667, 0.000000)  // r4.x <- x1.x; r4.y <- x1.y; r4.z <- x1.z

#line 214
  add r6.xyz, r2.xyzx, -r3.xyzx
  add r6.xyz, r6.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)  // r6.x <- x2.x; r6.y <- x2.y; r6.z <- x2.z

#line 219
  mul r7.xyz, r1.yzwy, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r7.xyz, r7.xyzx
  mad r1.yzw, -r7.xxyz, l(0.000000, 69.000000, 69.000000, 69.000000), r1.yyzw

#line 220
  ge r7.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r1.yzwy
  and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r8.xyz, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- Pi_inc1.x; r7.y <- Pi_inc1.y; r7.z <- Pi_inc1.z

#line 221
  mov r8.xy, r1.yzyy
  mov r8.zw, r7.xxxy
  add r8.xyzw, r8.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r8.x <- Pt.x; r8.y <- Pt.y; r8.z <- Pt.z; r8.w <- Pt.w

#line 222
  mul r9.xyzw, r8.xyzw, r8.xyzw  // r9.x <- Pt.x; r9.y <- Pt.y; r9.z <- Pt.z; r9.w <- Pt.w

#line 223
  mad r8.xyzw, r8.zwzw, r8.zwzw, -r9.xyxy
  mov r10.xy, r5.xyxx
  mov r10.zw, r3.xxxy
  mad r8.xyzw, r10.xywz, r8.xywz, r9.xyyx  // r8.x <- V1xy_V2xy.x; r8.y <- V1xy_V2xy.y; r8.w <- V1xy_V2xy.z; r8.z <- V1xy_V2xy.w

#line 224
  mov r10.xw, r9.xxxz
  mov r10.yz, r8.xxwx
  mov r8.xw, r9.yyyw
  mul r8.xyzw, r8.xyzw, r10.xyzw  // r8.x <- Pt.x; r8.y <- Pt.y; r8.z <- Pt.z; r8.w <- Pt.w

#line 225
  mad r1.yzw, r1.wwww, l(0.000000, 48.500389, 65.294121, 63.934601), l(0.000000, 635.298706, 682.357483, 668.926514)
  div r1.yzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.yyzw  // r1.y <- lowz_mods.x; r1.z <- lowz_mods.y; r1.w <- lowz_mods.z

#line 226
  mad r3.xyw, r7.zzzz, l(48.500389, 65.294121, 0.000000, 63.934601), l(635.298706, 682.357483, 0.000000, 668.926514)
  div r7.xyw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyxw  // r7.x <- highz_mods.x; r7.y <- highz_mods.y; r7.w <- highz_mods.z

#line 227
  lt r2.w, r5.z, l(0.500000)
  movc r3.xyw, r2.wwww, r1.yzyw, r7.xyxw  // r3.x <- Pi_1.x; r3.y <- Pi_1.y; r3.w <- Pi_1.z

#line 228
  lt r2.w, r3.z, l(0.500000)
  movc r5.xyz, r2.wwww, r1.yzwy, r7.xywx  // r5.x <- Pi_2.x; r5.y <- Pi_2.y; r5.z <- Pi_2.z

#line 229
  mov r9.x, r1.y
  mov r9.y, r3.x
  mov r9.z, r5.x
  mov r9.w, r7.x
  mul r9.xyzw, r8.xyzw, r9.xyzw
  frc r9.xyzw, r9.xyzw
  add r9.xyzw, r9.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r9.x <- hash_0.x; r9.y <- hash_0.y; r9.z <- hash_0.z; r9.w <- hash_0.w

#line 230
  mov r10.x, r1.z
  mov r10.y, r3.y
  mov r10.z, r5.y
  mov r10.w, r7.y
  mul r10.xyzw, r8.xyzw, r10.xyzw
  frc r10.xyzw, r10.xyzw
  add r10.xyzw, r10.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r10.x <- hash_1.x; r10.y <- hash_1.y; r10.z <- hash_1.z; r10.w <- hash_1.w

#line 231
  mov r7.x, r1.w
  mov r7.y, r3.w
  mov r7.z, r5.z
  mul r3.xyzw, r7.xyzw, r8.xyzw
  frc r3.xyzw, r3.xyzw
  add r3.xyzw, r3.xyzw, l(-0.499990, -0.499990, -0.499990, -0.499990)  // r3.x <- hash_2.x; r3.y <- hash_2.y; r3.z <- hash_2.z; r3.w <- hash_2.w

#line 232
  mul r5.xyzw, r10.xyzw, r10.xyzw
  mad r5.xyzw, r9.xyzw, r9.xyzw, r5.xyzw
  mad r5.xyzw, r3.xyzw, r3.xyzw, r5.xyzw
  rsq r5.xyzw, r5.xyzw  // r5.x <- norm.x; r5.y <- norm.y; r5.z <- norm.z; r5.w <- norm.w

#line 233
  mul r7.xyzw, r5.xyzw, r9.xyzw  // r7.x <- hash_0.x; r7.y <- hash_0.y; r7.z <- hash_0.z; r7.w <- hash_0.w

#line 234
  mul r8.xyzw, r5.xyzw, r10.xyzw  // r8.x <- hash_1.x; r8.y <- hash_1.y; r8.z <- hash_1.z; r8.w <- hash_1.w

#line 235
  mul r3.xyzw, r3.xyzw, r5.xyzw

#line 236
  add r5.xw, r2.xxxx, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r5.y, r4.x
  mov r5.z, r6.x
  add r9.xw, r2.yyyy, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r9.y, r4.y
  mov r9.z, r6.y
  mul r10.xyzw, r8.xyzw, r9.xyzw
  mad r10.xyzw, r7.xyzw, r5.xyzw, r10.xyzw
  add r6.xw, r2.zzzz, l(0.000000, 0.000000, 0.000000, -0.500000)
  mov r6.y, r4.z
  mad r2.xyzw, r3.xyzw, r6.xyzw, r10.xyzw  // r2.x <- grad_results.x; r2.y <- grad_results.y; r2.z <- grad_results.z; r2.w <- grad_results.w

#line 237
  mul r4.xyzw, r9.xyzw, r9.xyzw
  mad r4.xyzw, r5.xyzw, r5.xyzw, r4.xyzw
  mad r4.xyzw, r6.xyzw, r6.xyzw, r4.xyzw  // r4.x <- m.x; r4.y <- m.y; r4.z <- m.z; r4.w <- m.w

#line 238
  add r4.xyzw, -r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r4.x <- m.x; r4.y <- m.y; r4.z <- m.z; r4.w <- m.w

#line 239
  mul r10.xyzw, r4.xyzw, r4.xyzw  // r10.x <- m2.x; r10.y <- m2.y; r10.z <- m2.z; r10.w <- m2.w

#line 240
  mul r4.xyzw, r4.xyzw, r10.xyzw  // r4.x <- m3.x; r4.y <- m3.y; r4.z <- m3.z; r4.w <- m3.w

#line 241
  mul r2.xyzw, r2.xyzw, r10.xyzw
  mul r2.xyzw, r2.xyzw, l(-6.000000, -6.000000, -6.000000, -6.000000)  // r2.x <- temp.x; r2.y <- temp.y; r2.z <- temp.z; r2.w <- temp.w

#line 242
  dp4 r1.y, r2.xyzw, r5.xyzw
  dp4 r1.z, r4.xyzw, r7.xyzw
  add r5.x, r1.z, r1.y  // r5.x <- xderiv

#line 243
  dp4 r1.y, r2.xyzw, r9.xyzw
  dp4 r1.z, r4.xyzw, r8.xyzw
  add r5.y, r1.z, r1.y  // r5.y <- yderiv

#line 244
  dp4 r1.y, r2.xyzw, r6.xyzw
  dp4 r1.z, r4.xyzw, r3.xyzw
  add r5.z, r1.z, r1.y  // r5.z <- zderiv

#line 246
  mul r0.xyz, r5.xyzx, l(37.837227, 37.837227, 37.837227, 0.000000)  // r0.x <- <simplexGrad_id75 return value>.y; r0.y <- <simplexGrad_id75 return value>.z; r0.z <- <simplexGrad_id75 return value>.w

#line 406
  mov r0.w, l(1.000000)
  mov r1.x, l(-1)
  break 

#line 407
  case l(6)

#line 408
  add r1.yz, v1.xxyx, cb0[5].zzwz
  mul r2.xy, r1.yzyy, cb0[5].xyxx

#line 181
  round_ni r2.xy, r2.xyxx  // r2.x <- Pi.x; r2.y <- Pi.y

#line 182
  mad r1.yz, r1.yyzy, cb0[5].xxyx, -r2.xxyx  // r1.y <- Pf.x; r1.z <- Pf.y

#line 184
  add r2.zw, r2.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.xyzw, r2.xyzw, l(0.014085, 0.014085, 0.014085, 0.014085)
  round_ni r3.xyzw, r3.xyzw
  mad r2.xyzw, -r3.xyzw, l(71.000000, 71.000000, 71.000000, 71.000000), r2.xyzw  // r2.x <- Pt.x; r2.y <- Pt.y; r2.z <- Pt.z; r2.w <- Pt.w

#line 185
  add r2.xyzw, r2.xyzw, l(26.000000, 161.000000, 26.000000, 161.000000)

#line 186
  mul r2.xyzw, r2.xyzw, r2.xyzw

#line 187
  mul r2.xyzw, r2.yyww, r2.xzxz

#line 188
  mul r3.xyzw, r2.xyzw, l(0.001051, 0.001051, 0.001051, 0.001051)
  frc r3.xyzw, r3.xyzw  // r3.x <- hash_x.x; r3.y <- hash_x.y; r3.z <- hash_x.z; r3.w <- hash_x.w

#line 189
  mul r2.xyzw, r2.xyzw, l(0.001555, 0.001555, 0.001555, 0.001555)
  frc r2.xyzw, r2.xyzw  // r2.x <- hash_y.x; r2.y <- hash_y.y; r2.z <- hash_y.z; r2.w <- hash_y.w

#line 190
  mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)

#line 191
  mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)

#line 192
  mul r4.xyzw, r3.xyzw, r3.xyzw
  lt r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzw
  lt r6.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r5.xyzw, -r5.xyzw, r6.xyzw
  itof r5.xyzw, r5.xyzw
  mad r3.xyzw, r4.xyzw, r3.xyzw, -r5.xyzw
  mad r3.xyzw, r3.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000), l(0.000000, 1.000000, 0.000000, 1.000000)  // r3.x <- hash_x.x; r3.y <- hash_x.y; r3.z <- hash_x.z; r3.w <- hash_x.w

#line 193
  mul r4.xyzw, r2.xyzw, r2.xyzw
  lt r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzw
  lt r6.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r5.xyzw, -r5.xyzw, r6.xyzw
  itof r5.xyzw, r5.xyzw
  mad r2.xyzw, r4.xyzw, r2.xyzw, -r5.xyzw
  mad r2.xyzw, r2.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000), l(0.000000, 0.000000, 1.000000, 1.000000)  // r2.x <- hash_y.x; r2.y <- hash_y.y; r2.z <- hash_y.z; r2.w <- hash_y.w

#line 194
  add r3.xyzw, r1.yyyy, -r3.xyzw  // r3.x <- dx.x; r3.y <- dx.y; r3.z <- dx.z; r3.w <- dx.w

#line 195
  add r2.xyzw, r1.zzzz, -r2.xyzw  // r2.x <- dy.x; r2.y <- dy.y; r2.z <- dy.z; r2.w <- dy.w

#line 196
  mul r2.xyzw, r2.xyzw, r2.xyzw
  mad r2.xyzw, r3.xyzw, r3.xyzw, r2.xyzw  // r2.x <- d.x; r2.y <- d.y; r2.z <- d.z; r2.w <- d.w

#line 197
  min r1.yz, r2.zzwz, r2.xxyx  // r1.y <- d.x; r1.z <- d.y

#line 198
  min r1.y, r1.z, r1.y
  mul r0.xyzw, r1.yyyy, l(0.888889, 0.888889, 0.888889, 0.888889)  // r0.w <- <worleyFast_id81 return value>

#line 408
  mov r1.x, l(-1)
  break 

#line 409
  case l(7)

#line 410
  add r1.yz, v1.xxyx, cb0[5].zzwz
  mul r2.xy, r1.yzyy, cb0[5].xyxx

#line 140
  round_ni r3.xy, r2.xyxx  // r3.x <- Pi.x; r3.y <- Pi.y
  round_ni r3.z, cb0[6].x  // r3.z <- Pi.z

#line 141
  mov r2.z, cb0[6].x
  add r1.yzw, r2.xxyz, -r3.xxyz  // r1.y <- Pf.x; r1.z <- Pf.y; r1.w <- Pf.z

#line 142
  mul r2.xyz, r3.xyzx, l(0.014493, 0.014493, 0.014493, 0.000000)
  round_ni r2.xyz, r2.xyzx
  mad r2.xyz, -r2.xyzx, l(69.000000, 69.000000, 69.000000, 0.000000), r3.xyzx  // r2.x <- Pi.x; r2.y <- Pi.y; r2.z <- Pi.z

#line 143
  ge r3.xyz, l(67.500000, 67.500000, 67.500000, 0.000000), r2.xyzx
  and r3.xyz, r3.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  add r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Pi_inc1.x; r3.y <- Pi_inc1.y; r3.z <- Pi_inc1.z

#line 144
  mov r4.xy, r2.xyxx
  mov r4.zw, r3.xxxy
  add r4.xyzw, r4.xyzw, l(50.000000, 161.000000, 50.000000, 161.000000)  // r4.x <- Pt.x; r4.y <- Pt.y; r4.z <- Pt.z; r4.w <- Pt.w

#line 145
  mul r4.xyzw, r4.xyzw, r4.xyzw

#line 146
  mul r4.xyzw, r4.yyww, r4.xzxz

#line 147
  mad r2.xyz, r2.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx  // r2.x <- lowz_mod.x; r2.y <- lowz_mod.y; r2.z <- lowz_mod.z

#line 148
  mad r3.xyz, r3.zzzz, l(48.500389, 65.294121, 63.934601, 0.000000), l(635.298706, 682.357483, 668.926514, 0.000000)
  div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzx  // r3.x <- highz_mod.x; r3.y <- highz_mod.y; r3.z <- highz_mod.z

#line 149
  mul r5.xyzw, r2.xxxx, r4.xyzw
  frc r5.xyzw, r5.xyzw
  mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r5.x <- hash_x0.x; r5.y <- hash_x0.y; r5.z <- hash_x0.z; r5.w <- hash_x0.w

#line 150
  mul r6.xyzw, r3.xxxx, r4.xyzw
  frc r6.xyzw, r6.xyzw
  mad r6.xyzw, r6.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r6.x <- hash_x1.x; r6.y <- hash_x1.y; r6.z <- hash_x1.z; r6.w <- hash_x1.w

#line 151
  mul r7.xyzw, r2.yyyy, r4.xyzw
  frc r7.xyzw, r7.xyzw
  mad r7.xyzw, r7.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r7.x <- hash_y0.x; r7.y <- hash_y0.y; r7.z <- hash_y0.z; r7.w <- hash_y0.w

#line 152
  mul r8.xyzw, r3.yyyy, r4.xyzw
  frc r8.xyzw, r8.xyzw
  mad r8.xyzw, r8.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r8.x <- hash_y1.x; r8.y <- hash_y1.y; r8.z <- hash_y1.z; r8.w <- hash_y1.w

#line 153
  mul r2.xyzw, r2.zzzz, r4.xyzw
  frc r2.xyzw, r2.xyzw
  mad r2.xyzw, r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r2.x <- hash_z0.x; r2.y <- hash_z0.y; r2.z <- hash_z0.z; r2.w <- hash_z0.w

#line 154
  mul r3.xyzw, r3.zzzz, r4.xyzw
  frc r3.xyzw, r3.xyzw
  mad r3.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)  // r3.x <- hash_z1.x; r3.y <- hash_z1.y; r3.z <- hash_z1.z; r3.w <- hash_z1.w

#line 156
  mul r4.xyzw, r5.xyzw, r5.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzw
  lt r10.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r4.xyzw, r4.xyzw, r5.xyzw, -r9.xyzw
  mad r4.xyzw, r4.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 1.000000, 0.000000, 1.000000)  // r4.x <- hash_x0.x; r4.y <- hash_x0.y; r4.z <- hash_x0.z; r4.w <- hash_x0.w

#line 157
  mul r5.xyzw, r7.xyzw, r7.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzw
  lt r10.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r5.xyzw, r5.xyzw, r7.xyzw, -r9.xyzw
  mad r5.xyzw, r5.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 0.000000, 1.000000, 1.000000)  // r5.x <- hash_y0.x; r5.y <- hash_y0.y; r5.z <- hash_y0.z; r5.w <- hash_y0.w

#line 158
  mul r7.xyzw, r6.xyzw, r6.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzw
  lt r10.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r6.xyzw, r7.xyzw, r6.xyzw, -r9.xyzw
  mad r6.xyzw, r6.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 1.000000, 0.000000, 1.000000)  // r6.x <- hash_x1.x; r6.y <- hash_x1.y; r6.z <- hash_x1.z; r6.w <- hash_x1.w

#line 159
  mul r7.xyzw, r8.xyzw, r8.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzw
  lt r10.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r7.xyzw, r7.xyzw, r8.xyzw, -r9.xyzw
  mad r7.xyzw, r7.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(0.000000, 0.000000, 1.000000, 1.000000)  // r7.x <- hash_y1.x; r7.y <- hash_y1.y; r7.z <- hash_y1.z; r7.w <- hash_y1.w

#line 160
  mul r8.xyzw, r2.xyzw, r2.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzw
  lt r10.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r2.xyzw, r8.xyzw, r2.xyzw, -r9.xyzw

#line 161
  mul r8.xyzw, r3.xyzw, r3.xyzw
  lt r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzw
  lt r10.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  iadd r9.xyzw, -r9.xyzw, r10.xyzw
  itof r9.xyzw, r9.xyzw
  mad r3.xyzw, r8.xyzw, r3.xyzw, -r9.xyzw
  mad r3.xyzw, r3.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), l(1.000000, 1.000000, 1.000000, 1.000000)  // r3.x <- hash_z1.x; r3.y <- hash_z1.y; r3.z <- hash_z1.z; r3.w <- hash_z1.w

#line 162
  add r4.xyzw, r1.yyyy, -r4.xyzw  // r4.x <- dx1.x; r4.y <- dx1.y; r4.z <- dx1.z; r4.w <- dx1.w

#line 163
  add r5.xyzw, r1.zzzz, -r5.xyzw  // r5.x <- dy1.x; r5.y <- dy1.y; r5.z <- dy1.z; r5.w <- dy1.w

#line 164
  mad r2.xyzw, -r2.xyzw, l(0.166667, 0.166667, 0.166667, 0.166667), r1.wwww  // r2.x <- dz1.x; r2.y <- dz1.y; r2.z <- dz1.z; r2.w <- dz1.w

#line 165
  add r6.xyzw, r1.yyyy, -r6.xyzw  // r6.x <- dx2.x; r6.y <- dx2.y; r6.z <- dx2.z; r6.w <- dx2.w

#line 166
  add r7.xyzw, r1.zzzz, -r7.xyzw  // r7.x <- dy2.x; r7.y <- dy2.y; r7.z <- dy2.z; r7.w <- dy2.w

#line 167
  add r3.xyzw, r1.wwww, -r3.xyzw  // r3.x <- dz2.x; r3.y <- dz2.y; r3.z <- dz2.z; r3.w <- dz2.w

#line 168
  mul r8.xyzw, r5.xyzw, r5.xyzw
  mad r8.xyzw, r4.xyzw, r4.xyzw, r8.xyzw
  mad r8.xyzw, r2.xyzw, r2.xyzw, r8.xyzw  // r8.x <- d1.x; r8.y <- d1.y; r8.z <- d1.z; r8.w <- d1.w

#line 169
  mul r9.xyzw, r7.xyzw, r7.xyzw
  mad r9.xyzw, r6.xyzw, r6.xyzw, r9.xyzw
  mad r9.xyzw, r3.xyzw, r3.xyzw, r9.xyzw  // r9.x <- d2.x; r9.y <- d2.y; r9.z <- d2.z; r9.w <- d2.w

#line 171
  lt r1.yz, r8.xxzx, r8.yywy

#line 170
  mov r10.x, r8.x
  mov r10.y, r4.x
  mov r10.z, r5.x
  mov r10.w, r2.x
  mov r11.x, r8.y
  mov r11.y, r4.y
  mov r11.z, r5.y
  mov r11.w, r2.y
  movc r10.xyzw, r1.yyyy, r10.xyzw, r11.xyzw  // r10.x <- r1.x; r10.y <- r1.y; r10.z <- r1.z; r10.w <- r1.w

#line 171
  mov r11.x, r8.z
  mov r11.y, r4.z
  mov r11.z, r5.z
  mov r11.w, r2.z
  mov r2.x, r8.w
  mov r2.y, r4.w
  mov r2.z, r5.w
  movc r2.xyzw, r1.zzzz, r11.xyzw, r2.xyzw  // r2.x <- r2.x; r2.y <- r2.y; r2.z <- r2.z; r2.w <- r2.w

#line 173
  lt r1.yz, r9.xxzx, r9.yywy

#line 172
  mov r4.x, r9.x
  mov r4.y, r6.x
  mov r4.z, r7.x
  mov r4.w, r3.x
  mov r5.x, r9.y
  mov r5.y, r6.y
  mov r5.z, r7.y
  mov r5.w, r3.y
  movc r4.xyzw, r1.yyyy, r4.xyzw, r5.xyzw  // r4.x <- r3.x; r4.y <- r3.y; r4.z <- r3.z; r4.w <- r3.w

#line 173
  mov r5.x, r9.z
  mov r5.y, r6.z
  mov r5.z, r7.z
  mov r5.w, r3.z
  mov r3.x, r9.w
  mov r3.y, r6.w
  mov r3.z, r7.w
  movc r3.xyzw, r1.zzzz, r5.xyzw, r3.xyzw  // r3.x <- r4.x; r3.y <- r4.y; r3.z <- r4.z; r3.w <- r4.w

#line 174
  lt r1.y, r10.x, r2.x
  movc r2.xyzw, r1.yyyy, r10.xyzw, r2.xyzw  // r2.x <- t1.x; r2.y <- t1.y; r2.z <- t1.z; r2.w <- t1.w

#line 175
  lt r1.y, r4.x, r3.x
  movc r3.xyzw, r1.yyyy, r4.xyzw, r3.xyzw  // r3.x <- t2.x; r3.y <- t2.y; r3.z <- t2.z; r3.w <- t2.w

#line 176
  lt r1.y, r2.x, r3.x
  movc r1.yzw, r1.yyyy, r2.yyzw, r3.yyzw
  mul r0.xyz, r1.yzwy, l(1.500000, 1.500000, 1.500000, 0.000000)  // r0.x <- <worleyFastGrad_id84 return value>.y; r0.y <- <worleyFastGrad_id84 return value>.z; r0.z <- <worleyFastGrad_id84 return value>.w

#line 410
  mov r0.w, l(1.000000)
  mov r1.x, l(-1)
  break 

#line 411
  default 
  mov r1.x, l(0)
  break 
endswitch   // r0.x <- <Shading_id99 return value>.x; r0.y <- <Shading_id99 return value>.y; r0.z <- <Shading_id99 return value>.z; r0.w <- <Shading_id99 return value>.w

#line 412
and o0.xyzw, r0.xyzw, r1.xxxx

#line 421
ret 
// Approximately 601 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float2 Scale_id87 = float2(4, 4);
    float2 Offset_id88;
    float Z_id89;
    uint Type_id90;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float4 worleyFastGrad_id84(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float3 lowz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi.zzz * float3(48.500388, 65.294118, 63.934599)));
    float3 highz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599)));
    float4 hash_x0 = frac(Pt * lowz_mod.xxxx) * 2.0 - 1.0;
    float4 hash_x1 = frac(Pt * highz_mod.xxxx) * 2.0 - 1.0;
    float4 hash_y0 = frac(Pt * lowz_mod.yyyy) * 2.0 - 1.0;
    float4 hash_y1 = frac(Pt * highz_mod.yyyy) * 2.0 - 1.0;
    float4 hash_z0 = frac(Pt * lowz_mod.zzzz) * 2.0 - 1.0;
    float4 hash_z1 = frac(Pt * highz_mod.zzzz) * 2.0 - 1.0;
    const float JITTER_WINDOW = 0.166666666;
    hash_x0 = ((hash_x0 * hash_x0 * hash_x0) - sign(hash_x0)) * JITTER_WINDOW + float4(0.0, 1.0, 0.0, 1.0);
    hash_y0 = ((hash_y0 * hash_y0 * hash_y0) - sign(hash_y0)) * JITTER_WINDOW + float4(0.0, 0.0, 1.0, 1.0);
    hash_x1 = ((hash_x1 * hash_x1 * hash_x1) - sign(hash_x1)) * JITTER_WINDOW + float4(0.0, 1.0, 0.0, 1.0);
    hash_y1 = ((hash_y1 * hash_y1 * hash_y1) - sign(hash_y1)) * JITTER_WINDOW + float4(0.0, 0.0, 1.0, 1.0);
    hash_z0 = ((hash_z0 * hash_z0 * hash_z0) - sign(hash_z0)) * JITTER_WINDOW + float4(0.0, 0.0, 0.0, 0.0);
    hash_z1 = ((hash_z1 * hash_z1 * hash_z1) - sign(hash_z1)) * JITTER_WINDOW + float4(1.0, 1.0, 1.0, 1.0);
    float4 dx1 = Pf.xxxx - hash_x0;
    float4 dy1 = Pf.yyyy - hash_y0;
    float4 dz1 = Pf.zzzz - hash_z0;
    float4 dx2 = Pf.xxxx - hash_x1;
    float4 dy2 = Pf.yyyy - hash_y1;
    float4 dz2 = Pf.zzzz - hash_z1;
    float4 d1 = dx1 * dx1 + dy1 * dy1 + dz1 * dz1;
    float4 d2 = dx2 * dx2 + dy2 * dy2 + dz2 * dz2;
    float4 r1 = d1.x < d1.y ? float4(d1.x, dx1.x, dy1.x, dz1.x) : float4(d1.y, dx1.y, dy1.y, dz1.y);
    float4 r2 = d1.z < d1.w ? float4(d1.z, dx1.z, dy1.z, dz1.z) : float4(d1.w, dx1.w, dy1.w, dz1.w);
    float4 r3 = d2.x < d2.y ? float4(d2.x, dx2.x, dy2.x, dz2.x) : float4(d2.y, dx2.y, dy2.y, dz2.y);
    float4 r4 = d2.z < d2.w ? float4(d2.z, dx2.z, dy2.z, dz2.z) : float4(d2.w, dx2.w, dy2.w, dz2.w);
    float4 t1 = r1.x < r2.x ? r1 : r2;
    float4 t2 = r3.x < r4.x ? r3 : r4;
    return (t1.x < t2.x ? t1 : t2) * float4(1.0, 2.0, 2.0, 2.0) * (9.0 / 12.0);
}
float worleyFast_id81(float2 p)
{
    const float JITTER_WINDOW = 0.25;
    float2 Pi = floor(p);
    float2 Pf = p - Pi;
    float4 Pt = float4(Pi.xy, Pi.xy + 1.0);
    Pt = Pt - floor(Pt * (1.0 / 71.0)) * 71.0;
    Pt += float2(26.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float4 hash_x = frac(Pt * (1.0 / 951.135664));
    float4 hash_y = frac(Pt * (1.0 / 642.949883));
    hash_x = hash_x * 2.0 - 1.0;
    hash_y = hash_y * 2.0 - 1.0;
    hash_x = ((hash_x * hash_x * hash_x) - sign(hash_x)) * JITTER_WINDOW + float4(0.0, 1.0, 0.0, 1.0);
    hash_y = ((hash_y * hash_y * hash_y) - sign(hash_y)) * JITTER_WINDOW + float4(0.0, 0.0, 1.0, 1.0);
    float4 dx = Pf.xxxx - hash_x;
    float4 dy = Pf.yyyy - hash_y;
    float4 d = dx * dx + dy * dy;
    d.xy = min(d.xy, d.zw);
    return min(d.x, d.y) * (1.0 / 1.125);
}
float4 simplexGrad_id75(float3 p)
{
    const float SKEWFACTOR = 1.0 / 3.0;
    const float UNSKEWFACTOR = 1.0 / 6.0;
    const float SIMPLEX_CORNER_POS = 0.5;
    const float SIMPLEX_TETRAHADRON_HEIGHT = 0.70710678118654752440084436210485;
    p *= SIMPLEX_TETRAHADRON_HEIGHT;
    float3 Pi = floor(p + dot(p, SKEWFACTOR));
    float3 x0 = p - Pi + dot(Pi, UNSKEWFACTOR);
    float3 g = step(x0.yzx, x0.xyz);
    float3 l = 1.0 - g;
    float3 Pi_1 = min(g.xyz, l.zxy);
    float3 Pi_2 = max(g.xyz, l.zxy);
    float3 x1 = x0 - Pi_1 + UNSKEWFACTOR;
    float3 x2 = x0 - Pi_2 + SKEWFACTOR;
    float3 x3 = x0 - SIMPLEX_CORNER_POS;
    float4 v1234_x = float4(x0.x, x1.x, x2.x, x3.x);
    float4 v1234_y = float4(x0.y, x1.y, x2.y, x3.y);
    float4 v1234_z = float4(x0.z, x1.z, x2.z, x3.z);
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    float4 V1xy_V2xy = lerp(Pt.xyxy, Pt.zwzw, float4(Pi_1.xy, Pi_2.xy));
    Pt = float4(Pt.x, V1xy_V2xy.xz, Pt.z) * float4(Pt.y, V1xy_V2xy.yw, Pt.w);
    float3 lowz_mods = float3(1.0 / (float3(635.298681, 682.357502, 668.926525).xyz + Pi.zzz * float3(48.500388, 65.294118, 63.934599).xyz));
    float3 highz_mods = float3(1.0 / (float3(635.298681, 682.357502, 668.926525).xyz + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599).xyz));
    Pi_1 = (Pi_1.z < 0.5) ? lowz_mods : highz_mods;
    Pi_2 = (Pi_2.z < 0.5) ? lowz_mods : highz_mods;
    float4 hash_0 = frac(Pt * float4(lowz_mods.x, Pi_1.x, Pi_2.x, highz_mods.x)) - 0.49999;
    float4 hash_1 = frac(Pt * float4(lowz_mods.y, Pi_1.y, Pi_2.y, highz_mods.y)) - 0.49999;
    float4 hash_2 = frac(Pt * float4(lowz_mods.z, Pi_1.z, Pi_2.z, highz_mods.z)) - 0.49999;
    float4 norm = rsqrt(hash_0 * hash_0 + hash_1 * hash_1 + hash_2 * hash_2);
    hash_0 *= norm;
    hash_1 *= norm;
    hash_2 *= norm;
    float4 grad_results = hash_0 * v1234_x + hash_1 * v1234_y + hash_2 * v1234_z;
    float4 m = v1234_x * v1234_x + v1234_y * v1234_y + v1234_z * v1234_z;
    m = max(0.5 - m, 0.0);
    float4 m2 = m * m;
    float4 m3 = m * m2;
    float4 temp = -6.0 * m2 * grad_results;
    float xderiv = dot(temp, v1234_x) + dot(m3, hash_0);
    float yderiv = dot(temp, v1234_y) + dot(m3, hash_1);
    float zderiv = dot(temp, v1234_z) + dot(m3, hash_2);
    const float FINAL_NORMALIZATION = 37.837227241611314102871574478976;
    return float4(dot(m3, grad_results), xderiv, yderiv, zderiv) * FINAL_NORMALIZATION;
}
float simplex_id72(float2 p)
{
    const float SKEWFACTOR = 0.36602540378443864676372317075294;
    const float UNSKEWFACTOR = 0.21132486540518711774542560974902;
    const float SIMPLEX_TRI_HEIGHT = 0.70710678118654752440084436210485;
    const float3 SIMPLEX_POINTS = float3(1.0 - UNSKEWFACTOR, -UNSKEWFACTOR, 1.0 - 2.0 * UNSKEWFACTOR);
    p *= SIMPLEX_TRI_HEIGHT;
    float2 Pi = floor(p + dot(p, float2(SKEWFACTOR.xx)));
    float4 Pt = float4(Pi.xy, Pi.xy + 1.0);
    Pt = Pt - floor(Pt * (1.0 / 71.0)) * 71.0;
    Pt += float2(26.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float4 hash_x = frac(Pt * (1.0 / 951.135664));
    float4 hash_y = frac(Pt * (1.0 / 642.949883));
    float2 v0 = Pi - dot(Pi, float2(UNSKEWFACTOR.xx)) - p;
    float4 v1pos_v1hash = (v0.x < v0.y) ? float4(SIMPLEX_POINTS.xy, hash_x.y, hash_y.y) : float4(SIMPLEX_POINTS.yx, hash_x.z, hash_y.z);
    float4 v12 = float4(v1pos_v1hash.xy, SIMPLEX_POINTS.zz) + v0.xyxy;
    float3 grad_x = float3(hash_x.x, v1pos_v1hash.z, hash_x.w) - 0.49999;
    float3 grad_y = float3(hash_y.x, v1pos_v1hash.w, hash_y.w) - 0.49999;
    float3 grad_results = rsqrt(grad_x * grad_x + grad_y * grad_y) * (grad_x * float3(v0.x, v12.xz) + grad_y * float3(v0.y, v12.yw));
    const float FINAL_NORMALIZATION = 99.204334582718712976990005025589;
    float3 m = float3(v0.x, v12.xz) * float3(v0.x, v12.xz) + float3(v0.y, v12.yw) * float3(v0.y, v12.yw);
    m = max(0.5 - m, 0.0);
    m = m * m;
    return dot(m * m, grad_results) * FINAL_NORMALIZATION;
}
float4 valueNoiseGrad_id57(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    float3 Pf_min1 = Pf - 1.0;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, (69.0 - 1.5)) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float2 hash_mod = float2(1.0 / (635.298681 + float2(Pi.z, Pi_inc1.z) * 48.500388));
    float4 hash_lowz = frac(Pt * hash_mod.xxxx);
    float4 hash_highz = frac(Pt * hash_mod.yyyy);
    float3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);
    float3 blendDeriv = Pf * Pf * (Pf * (Pf * 30.0 - 60.0) + 30.0);
    float4 res0 = lerp(hash_lowz, hash_highz, blend.z);
    float4 res1 = lerp(res0.xyxz, res0.zwyw, blend.yyxx);
    float4 res3 = lerp(float4(hash_lowz.xy, hash_highz.xy), float4(hash_lowz.zw, hash_highz.zw), blend.y);
    float2 res4 = lerp(res3.xz, res3.yw, blend.x);
    return float4(res1.x, 0.0, 0.0, 0.0) + (float4(res1.yyw, res4.y) - float4(res1.xxz, res4.x)) * float4(blend.x, blendDeriv);
}
float valueNoise_id54(float2 p)
{
    float2 Pi = floor(p);
    float2 Pf = p - Pi;
    float4 Pt = float4(Pi.xy, Pi.xy + 1.0);
    Pt = Pt - floor(Pt * (1.0 / 71.0)) * 71.0;
    Pt += float2(26.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float4 hash = frac(Pt * (1.0 / 951.135664));
    float2 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);
    float4 blend2 = float4(blend, float2(1.0 - blend));
    return dot(hash, blend2.zxzx * blend2.wwyy);
}
float4 perlinGrad_id66(float3 p)
{
    float3 Pi = floor(p);
    float3 Pf = p - Pi;
    float3 Pf_min1 = Pf - 1.0;
    Pi.xyz = Pi.xyz - floor(Pi.xyz * (1.0 / 69.0)) * 69.0;
    float3 Pi_inc1 = step(Pi, 69.0 - 1.5) * (Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi_inc1.xy) + float2(50.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float3 lowz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi.zzz * float3(48.500388, 65.294118, 63.934599)));
    float3 highz_mod = float3(1.0 / (float3(635.298681, 682.357502, 668.926525) + Pi_inc1.zzz * float3(48.500388, 65.294118, 63.934599)));
    float4 hashx0 = frac(Pt * lowz_mod.xxxx);
    float4 hashx1 = frac(Pt * highz_mod.xxxx);
    float4 hashy0 = frac(Pt * lowz_mod.yyyy);
    float4 hashy1 = frac(Pt * highz_mod.yyyy);
    float4 hashz0 = frac(Pt * lowz_mod.zzzz);
    float4 hashz1 = frac(Pt * highz_mod.zzzz);
    float4 grad_x0 = hashx0 - 0.49999;
    float4 grad_y0 = hashy0 - 0.49999;
    float4 grad_z0 = hashz0 - 0.49999;
    float4 grad_x1 = hashx1 - 0.49999;
    float4 grad_y1 = hashy1 - 0.49999;
    float4 grad_z1 = hashz1 - 0.49999;
    float4 norm_0 = rsqrt(grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0);
    float4 norm_1 = rsqrt(grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1);
    grad_x0 *= norm_0;
    grad_y0 *= norm_0;
    grad_z0 *= norm_0;
    grad_x1 *= norm_1;
    grad_y1 *= norm_1;
    grad_z1 *= norm_1;
    float4 dotval_0 = float2(Pf.x, Pf_min1.x).xyxy * grad_x0 + float2(Pf.y, Pf_min1.y).xxyy * grad_y0 + Pf.zzzz * grad_z0;
    float4 dotval_1 = float2(Pf.x, Pf_min1.x).xyxy * grad_x1 + float2(Pf.y, Pf_min1.y).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1;
    float3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);
    float3 blendDeriv = Pf * Pf * (Pf * (Pf * 30.0 - 60.0) + 30.0);
    float4 dotval0_grad0 = float4(dotval_0.x, grad_x0.x, grad_y0.x, grad_z0.x);
    float4 dotval1_grad1 = float4(dotval_0.y, grad_x0.y, grad_y0.y, grad_z0.y);
    float4 dotval2_grad2 = float4(dotval_0.z, grad_x0.z, grad_y0.z, grad_z0.z);
    float4 dotval3_grad3 = float4(dotval_0.w, grad_x0.w, grad_y0.w, grad_z0.w);
    float4 dotval4_grad4 = float4(dotval_1.x, grad_x1.x, grad_y1.x, grad_z1.x);
    float4 dotval5_grad5 = float4(dotval_1.y, grad_x1.y, grad_y1.y, grad_z1.y);
    float4 dotval6_grad6 = float4(dotval_1.z, grad_x1.z, grad_y1.z, grad_z1.z);
    float4 dotval7_grad7 = float4(dotval_1.w, grad_x1.w, grad_y1.w, grad_z1.w);
    float4 k0_gk0 = dotval1_grad1 - dotval0_grad0;
    float4 k1_gk1 = dotval2_grad2 - dotval0_grad0;
    float4 k2_gk2 = dotval4_grad4 - dotval0_grad0;
    float4 k3_gk3 = dotval3_grad3 - dotval2_grad2 - k0_gk0;
    float4 k4_gk4 = dotval5_grad5 - dotval4_grad4 - k0_gk0;
    float4 k5_gk5 = dotval6_grad6 - dotval4_grad4 - k1_gk1;
    float4 k6_gk6 = (dotval7_grad7 - dotval6_grad6) - (dotval5_grad5 - dotval4_grad4) - k3_gk3;
    float u = blend.x;
    float v = blend.y;
    float w = blend.z;
    float4 result = dotval0_grad0 + u * (k0_gk0 + v * k3_gk3) + v * (k1_gk1 + w * k5_gk5) + w * (k2_gk2 + u * (k4_gk4 + v * k6_gk6));
    result.y += dot(float4(k0_gk0.x, k3_gk3.x * v, float2(k4_gk4.x, k6_gk6.x * v) * w), float4(blendDeriv.xxxx));
    result.z += dot(float4(k1_gk1.x, k3_gk3.x * u, float2(k5_gk5.x, k6_gk6.x * u) * w), float4(blendDeriv.yyyy));
    result.w += dot(float4(k2_gk2.x, k4_gk4.x * u, float2(k5_gk5.x, k6_gk6.x * u) * v), float4(blendDeriv.zzzz));
    return result * 1.1547005383792515290182975610039;
}
float perlin_id63(float2 p)
{
    float2 Pi = floor(p);
    float4 Pf_Pfmin1 = p.xyxy - float4(Pi, Pi + 1.0);
    float4 Pt = float4(Pi.xy, Pi.xy + 1.0);
    Pt = Pt - floor(Pt * (1.0 / 71.0)) * 71.0;
    Pt += float2(26.0, 161.0).xyxy;
    Pt *= Pt;
    Pt = Pt.xzxz * Pt.yyww;
    float4 hash_x = frac(Pt * (1.0 / 951.135664));
    float4 hash_y = frac(Pt * (1.0 / 642.949883));
    float4 grad_x = hash_x - 0.49999;
    float4 grad_y = hash_y - 0.49999;
    float4 grad_results = rsqrt(grad_x * grad_x + grad_y * grad_y) * (grad_x * Pf_Pfmin1.xzxz + grad_y * Pf_Pfmin1.yyww);
    grad_results *= 1.4142135623730950488016887242097;
    float2 blend = Pf_Pfmin1.xy * Pf_Pfmin1.xy * Pf_Pfmin1.xy * (Pf_Pfmin1.xy * (Pf_Pfmin1.xy * 6.0 - 15.0) + 10.0);
    float4 blend2 = float4(blend, float2(1.0 - blend));
    return dot(grad_results, blend2.zxzx * blend2.wwyy);
}
float4 Shading_id99(inout PS_STREAMS streams)
{
    float2 uv = streams.TexCoord_id62;
    switch (Type_id90)

    {
        case 0:
            return perlin_id63((uv + Offset_id88) * Scale_id87);
        case 1:
            return float4(perlinGrad_id66(float3((uv + Offset_id88) * Scale_id87, Z_id89)).yzw, 1.0);
        case 2:
            return valueNoise_id54((uv + Offset_id88) * Scale_id87);
        case 3:
            return float4(valueNoiseGrad_id57(float3((uv + Offset_id88) * Scale_id87, Z_id89)).yzw, 1.0);
        case 4:
            return simplex_id72((uv + Offset_id88) * Scale_id87);
        case 5:
            return float4(simplexGrad_id75(float3((uv + Offset_id88) * Scale_id87, Z_id89)).yzw, 1.0);
        case 6:
            return worleyFast_id81((uv + Offset_id88) * Scale_id87);
        case 7:
            return float4(worleyFastGrad_id84(float3((uv + Offset_id88) * Scale_id87, Z_id89)).yzw, 1.0);
    }
    return 0;
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id99(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
