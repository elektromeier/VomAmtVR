/**************************
***** Compiler Parameters *****
***************************
@P EffectName: AmbientOcclusionWithOrthoRawAOEffect
@P   - AmbientOcclusionWithOrthoRawAO.Count: 13
@P AmbientOcclusionWithOrthoRawAO.IsOrtho: False
***************************
****  ConstantBuffers  ****
***************************
cbuffer PerDraw [Size: 64]
@C    MatrixTransform_id73 => SpriteBase.MatrixTransform
cbuffer PerView [Size: 32]
@C    NearClipPlane_id74 => Camera.NearClipPlane
@C    FarClipPlane_id75 => Camera.FarClipPlane
@C    ZProjection_id76 => Camera.ZProjection
@C    ViewSize_id77 => Camera.ViewSize
@C    AspectRatio_id78 => Camera.AspectRatio
cbuffer Globals [Size: 144]
@C    Texture0TexelSize_id15 => Texturing.Texture0TexelSize
@C    Texture1TexelSize_id17 => Texturing.Texture1TexelSize
@C    Texture2TexelSize_id19 => Texturing.Texture2TexelSize
@C    Texture3TexelSize_id21 => Texturing.Texture3TexelSize
@C    Texture4TexelSize_id23 => Texturing.Texture4TexelSize
@C    Texture5TexelSize_id25 => Texturing.Texture5TexelSize
@C    Texture6TexelSize_id27 => Texturing.Texture6TexelSize
@C    Texture7TexelSize_id29 => Texturing.Texture7TexelSize
@C    Texture8TexelSize_id31 => Texturing.Texture8TexelSize
@C    Texture9TexelSize_id33 => Texturing.Texture9TexelSize
@C    ProjInfo_id81 => AmbientOcclusionWithOrthoRawAOShader.ProjInfo
@C    ScreenInfo_id82 => AmbientOcclusionWithOrthoRawAOShader.ScreenInfo
@C    ParamProjScale_id83 => AmbientOcclusionWithOrthoRawAOShader.ParamProjScale
@C    ParamIntensity_id84 => AmbientOcclusionWithOrthoRawAOShader.ParamIntensity
@C    ParamBias_id85 => AmbientOcclusionWithOrthoRawAOShader.ParamBias
@C    ParamRadius_id86 => AmbientOcclusionWithOrthoRawAOShader.ParamRadius
@C    ParamRadiusSquared_id87 => AmbientOcclusionWithOrthoRawAOShader.ParamRadiusSquared
***************************
******  Resources    ******
***************************
@R    PerDraw => PerDraw [Stage: Vertex, Slot: (0-0)]
@R    Sampler_id42 => Texturing.Sampler [Stage: Pixel, Slot: (0-0)]
@R    Texture0_id14 => Texturing.Texture0 [Stage: Pixel, Slot: (0-0)]
@R    PerView => PerView [Stage: Pixel, Slot: (0-0)]
@R    Globals => Globals [Stage: Pixel, Slot: (1-1)]
***************************
*****     Sources     *****
***************************
@S    AmbientOcclusionWithOrthoRawAOShader => 54010281a389fdf09d0e9272b18a0f1f
@S    ImageEffectShader => 9b7cefba2dd674808bc791525995b495
@S    SpriteBase => 67b12f03dd9d34e76b6fcfb517afba8c
@S    ShaderBase => 01e372056ff6c06edab8e988414a8f75
@S    ShaderBaseStream => 91c0ea8aae0a45ca00578a4084fa3607
@S    Texturing => 6605f68230266eff2bc8b4e8102ede6b
@S    Camera => 68de88612bfb3b0a92e9082b82b993a9
***************************
*****     Stages      *****
***************************
@G    Vertex => 79eb7ff071584feaa45b858a38e87b6a
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerDraw
// {
//
//   float4x4 MatrixTransform_id73;     // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerDraw                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
//
// Initial variable locations:
//   v0.x <- __input__.Position_id72.x; v0.y <- __input__.Position_id72.y; v0.z <- __input__.Position_id72.z; v0.w <- __input__.Position_id72.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o1.x <- <VSMain return value>.TexCoord_id62.x; o1.y <- <VSMain return value>.TexCoord_id62.y; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 226 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_AmbientOcclusionWithOrthoRawAOEffect_ad2f6923bc73fb66e727ea6b7f6d2142.hlsl"
dp4 o0.x, v0.xyzw, cb0[0].xyzw
dp4 o0.y, v0.xyzw, cb0[1].xyzw
dp4 o0.z, v0.xyzw, cb0[2].xyzw
dp4 o0.w, v0.xyzw, cb0[3].xyzw

#line 230
mov o1.xy, v1.xyxx
ret 
// Approximately 6 instruction slots used
@G    Pixel => 18d535a37d3db550afbb2ee109da8a00
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PerView
// {
//
//   float NearClipPlane_id74;          // Offset:    0 Size:     4 [unused]
//      = 0x3f800000 
//   float FarClipPlane_id75;           // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   float2 ZProjection_id76;           // Offset:    8 Size:     8
//   float2 ViewSize_id77;              // Offset:   16 Size:     8 [unused]
//   float AspectRatio_id78;            // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer Globals
// {
//
//   float2 Texture0TexelSize_id15;     // Offset:    0 Size:     8 [unused]
//   float2 Texture1TexelSize_id17;     // Offset:    8 Size:     8 [unused]
//   float2 Texture2TexelSize_id19;     // Offset:   16 Size:     8 [unused]
//   float2 Texture3TexelSize_id21;     // Offset:   24 Size:     8 [unused]
//   float2 Texture4TexelSize_id23;     // Offset:   32 Size:     8 [unused]
//   float2 Texture5TexelSize_id25;     // Offset:   40 Size:     8 [unused]
//   float2 Texture6TexelSize_id27;     // Offset:   48 Size:     8 [unused]
//   float2 Texture7TexelSize_id29;     // Offset:   56 Size:     8 [unused]
//   float2 Texture8TexelSize_id31;     // Offset:   64 Size:     8 [unused]
//   float2 Texture9TexelSize_id33;     // Offset:   72 Size:     8 [unused]
//   float4 ProjInfo_id81;              // Offset:   80 Size:    16
//   float4 ScreenInfo_id82;            // Offset:   96 Size:    16
//   float ParamProjScale_id83;         // Offset:  112 Size:     4
//      = 0x3f800000 
//   float ParamIntensity_id84;         // Offset:  116 Size:     4
//      = 0x3f800000 
//   float ParamBias_id85;              // Offset:  120 Size:     4
//      = 0x3c23d70a 
//   float ParamRadius_id86;            // Offset:  124 Size:     4
//      = 0x3f800000 
//   float ParamRadiusSquared_id87;     // Offset:  128 Size:     4
//      = 0x3f800000 
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler_id42                      sampler      NA          NA             s0      1 
// Texture0_id14                     texture  float4          2d             t0      1 
// PerView                           cbuffer      NA          NA            cb0      1 
// Globals                           cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_constantbuffer CB1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.TexCoord_id62.x; v1.y <- __input__.TexCoord_id62.y; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 180 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_AmbientOcclusionWithOrthoRawAOEffect_ad2f6923bc73fb66e727ea6b7f6d2142.hlsl"
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.xyzw, s0, l(0.000000)  // r0.x <- depth

#line 152
add r0.x, r0.x, -cb0[0].z
div r0.z, cb0[0].w, r0.x  // r0.z <- <reconstructCSZ_id3 return value>

#line 182
mul r1.xy, v1.xyxx, cb1[6].xyxx
ftoi r1.zw, r1.xxxy  // r1.z <- screenPosition.x; r1.w <- screenPosition.y

#line 183
round_z r1.xy, r1.xyxx
add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)

#line 147
mad r1.xy, r1.xyxx, cb1[5].xyxx, cb1[5].zwzz
mul r0.xy, r0.zzzz, r1.xyxx  // r0.x <- <reconstructCSPosition_id4 return value>.x; r0.y <- <reconstructCSPosition_id4 return value>.y

#line 184
mov r1.x, -r0.x  // r1.x <- viewPosition.x

#line 176
deriv_rty_coarse r2.y, r1.x
deriv_rty_coarse r2.xz, r0.zzyz
deriv_rtx_coarse r3.z, r1.x
deriv_rtx_coarse r3.xy, r0.yzyy
mul r4.xyz, r2.xyzx, r3.xyzx
mad r2.yzw, r2.zzxy, r3.yyzx, -r4.xxyz
dp3 r1.x, r2.yzwy, r2.yzwy
rsq r1.x, r1.x
mul r2.yzw, r1.xxxx, r2.yyzw  // r2.y <- <reconstructCSNormal_id5 return value>.x; r2.z <- <reconstructCSNormal_id5 return value>.y; r2.w <- <reconstructCSNormal_id5 return value>.z

#line 187
ftoi r1.x, r0.z  // r1.x <- linearDepthInt

#line 188
imul null, r1.y, r1.z, l(3)
imad r1.x, l(15), r1.x, r1.y
ishl r1.y, r1.w, l(1)
imad r1.y, r1.z, r1.w, r1.y
xor r1.x, r1.y, r1.x
and r1.x, r1.x, l(0x0000ffff)
imul null, r1.x, r1.x, l(10)
utof r1.x, r1.x  // r1.x <- randomPatternRotationAngle

#line 190
div r1.y, cb1[7].x, r0.z  // r1.y <- diskRadius

#line 166
mov r0.w, -r0.x

#line 162
mov r4.zw, l(0,0,0,0)

#line 169
mul r2.yzw, r2.yyzw, l(0.000000, -1.000000, -1.000000, 1.000000)

#line 193
mov r3.xz, v1.xxyx  // r3.x <- streams.TexCoord_id62.x; r3.z <- streams.TexCoord_id62.y
mov r0.x, l(0)  // r0.x <- sum
mov r3.w, l(0)  // r3.w <- i
loop 
  ige r5.x, r3.w, l(13)
  breakc_nz r5.x

#line 156
  itof r5.x, r3.w
  add r5.x, r5.x, l(0.500000)
  mul r5.y, r1.y, r5.x

#line 157
  mad r5.x, r5.x, l(2.283696), r1.x  // r5.x <- angle

#line 158
  sincos r5.x, r6.x, r5.x  // r5.x <- offset.y; r6.x <- offset.x

#line 159
  mul r5.y, r5.y, l(0.051923)  // r5.y <- ssRadius

#line 160
  mov r6.y, r5.x
  mad_sat r5.xy, r6.xyxx, r5.yyyy, r3.xzxx

#line 161
  mul r5.xy, r5.xyxx, cb1[6].xyxx
  ftoi r4.xy, r5.xyxx  // r4.x <- samplePosInt.x; r4.y <- samplePosInt.y

#line 162
  ld_indexable(texture2d)(float,float,float,float) r4.x, r4.xyzw, t0.xyzw  // r4.x <- depth

#line 152
  add r4.x, r4.x, -cb0[0].z
  div r6.z, cb0[0].w, r4.x  // r6.z <- <reconstructCSZ_id3 return value>

#line 164
  round_z r4.xy, r5.xyxx
  add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)

#line 147
  mad r4.xy, r4.xyxx, cb1[5].xyxx, cb1[5].zwzz
  mul r6.xy, r6.zzzz, r4.xyxx  // r6.x <- <reconstructCSPosition_id4 return value>.x; r6.y <- <reconstructCSPosition_id4 return value>.y

#line 166
  mov r6.w, -r6.x
  add r5.xyz, -r0.wyzw, r6.wyzw  // r5.x <- v.x; r5.y <- v.y; r5.z <- v.z

#line 168
  mov r5.w, -r5.z
  dp3 r4.x, r5.xywx, r5.xywx  // r4.x <- distSq

#line 169
  dp3 r4.y, r5.xywx, r2.yzwy  // r4.y <- vn

#line 171
  add r5.x, -r4.x, cb1[8].x
  max r5.x, r5.x, l(0.000000)  // r5.x <- f

#line 172
  mul r5.y, r5.x, r5.x
  mul r5.x, r5.x, r5.y
  add r4.y, r4.y, -cb1[7].z
  add r4.x, r4.x, l(0.010000)
  div r4.x, r4.y, r4.x
  max r4.x, r4.x, l(0.000000)

#line 195
  mad r0.x, r5.x, r4.x, r0.x

#line 196
  iadd r3.w, r3.w, l(1)
endloop 

#line 197
mul r0.y, cb1[7].w, cb1[8].x  // r0.y <- temp

#line 198
mul r0.y, r0.y, r0.y
div r0.x, r0.x, r0.y

#line 199
mul r0.x, r0.x, cb1[7].y
mad r0.x, -r0.x, l(0.384615), l(1.000000)
max r0.x, r0.x, l(0.000000)  // r0.x <- A

#line 200
mad_sat r0.y, r0.z, l(2.000000), l(-0.500000)  // r0.y <- nearPlaneFade

#line 201
add r0.x, r0.x, l(-1.000000)
mad r0.x, r0.y, r0.x, l(1.000000)  // r0.x <- A

#line 202
lt r0.y, |r3.y|, l(0.020000)

#line 204
deriv_rtx_coarse r0.z, r0.x

#line 208
and r1.xy, r1.zwzz, l(1, 1, 0, 0)
itof r1.xy, r1.xyxx
add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)

#line 204
mad r0.z, -r0.z, r1.x, r0.x  // r0.z <- A

#line 205
movc r0.x, r0.y, r0.z, r0.x  // r0.x <- A

#line 206
lt r0.y, |r2.x|, l(0.020000)

#line 208
deriv_rty_coarse r0.z, r0.x
mad r0.z, -r0.z, r1.y, r0.x  // r0.z <- A

#line 209
movc o0.xyzw, r0.yyyy, r0.zzzz, r0.xxxx

#line 219
ret 
// Approximately 92 instruction slots used
***************************
*************************/
const static int SamplesCount_id79 = 13;
const static bool IsOrtho_id80 = false;
struct PS_STREAMS 
{
    float2 TexCoord_id62;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_STREAMS 
{
    float4 Position_id72;
    float2 TexCoord_id62;
    float4 ShadingPosition_id0;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float2 TexCoord_id62 : TEXCOORD0;
};
struct VS_INPUT 
{
    float4 Position_id72 : POSITION;
    float2 TexCoord_id62 : TEXCOORD0;
};
cbuffer PerDraw 
{
    float4x4 MatrixTransform_id73;
};
cbuffer PerView 
{
    float NearClipPlane_id74 = 1.0f;
    float FarClipPlane_id75 = 100.0f;
    float2 ZProjection_id76;
    float2 ViewSize_id77;
    float AspectRatio_id78;
};
cbuffer Globals 
{
    float2 Texture0TexelSize_id15;
    float2 Texture1TexelSize_id17;
    float2 Texture2TexelSize_id19;
    float2 Texture3TexelSize_id21;
    float2 Texture4TexelSize_id23;
    float2 Texture5TexelSize_id25;
    float2 Texture6TexelSize_id27;
    float2 Texture7TexelSize_id29;
    float2 Texture8TexelSize_id31;
    float2 Texture9TexelSize_id33;
    float4 ProjInfo_id81;
    float4 ScreenInfo_id82;
    float ParamProjScale_id83 = 1;
    float ParamIntensity_id84 = 1;
    float ParamBias_id85 = 0.01f;
    float ParamRadius_id86 = 1;
    float ParamRadiusSquared_id87 = 1;
};
Texture2D Texture0_id14;
Texture2D Texture1_id16;
Texture2D Texture2_id18;
Texture2D Texture3_id20;
Texture2D Texture4_id22;
Texture2D Texture5_id24;
Texture2D Texture6_id26;
Texture2D Texture7_id28;
Texture2D Texture8_id30;
Texture2D Texture9_id32;
TextureCube TextureCube0_id34;
TextureCube TextureCube1_id35;
TextureCube TextureCube2_id36;
TextureCube TextureCube3_id37;
Texture3D Texture3D0_id38;
Texture3D Texture3D1_id39;
Texture3D Texture3D2_id40;
Texture3D Texture3D3_id41;
SamplerState Sampler_id42;
SamplerState PointSampler_id43 
{
    Filter = MIN_MAG_MIP_POINT;
};
SamplerState LinearSampler_id44 
{
    Filter = MIN_MAG_MIP_LINEAR;
};
SamplerState LinearBorderSampler_id45 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Border;
    AddressV = Border;
};
SamplerComparisonState LinearClampCompareLessEqualSampler_id46 
{
    Filter = COMPARISON_MIN_MAG_LINEAR_MIP_POINT;
    AddressU = Clamp;
    AddressV = Clamp;
    ComparisonFunc = LessEqual;
};
SamplerState AnisotropicSampler_id47 
{
    Filter = ANISOTROPIC;
};
SamplerState AnisotropicRepeatSampler_id48 
{
    Filter = ANISOTROPIC;
    AddressU = Wrap;
    AddressV = Wrap;
    MaxAnisotropy = 16;
};
SamplerState PointRepeatSampler_id49 
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState LinearRepeatSampler_id50 
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState RepeatSampler_id51 
{
    AddressU = Wrap;
    AddressV = Wrap;
};
SamplerState Sampler0_id52;
SamplerState Sampler1_id53;
SamplerState Sampler2_id54;
SamplerState Sampler3_id55;
SamplerState Sampler4_id56;
SamplerState Sampler5_id57;
SamplerState Sampler6_id58;
SamplerState Sampler7_id59;
SamplerState Sampler8_id60;
SamplerState Sampler9_id61;
float3 reconstructCSPosition_id4(float2 S, float z)
{

    {
        return float3((S.xy * ProjInfo_id81.xy + ProjInfo_id81.zw) * z, z);
    }
}
float reconstructCSZ_id3(float depth)
{
    return ZProjection_id76.y / (depth - ZProjection_id76.x);
}
float sampleAO_id6(inout PS_STREAMS streams, int2 screenPosition, float3 viewPosition, float3 viewNormal, float diskRadius, int i, float randomPatternRotationAngle)
{
    float alpha = 1 * (i + 0.5) * 0.675f / SamplesCount_id79;
    float angle = 1 * 43.9822971503f * alpha + randomPatternRotationAngle;
    float2 offset = float2(cos(angle), sin(angle));
    float ssRadius = alpha * diskRadius;
    float2 samplePos = streams.TexCoord_id62 + offset * ssRadius;
    int2 samplePosInt = saturate(samplePos) * ScreenInfo_id82.xy;
    float depth = Texture0_id14.Load(int3(samplePosInt, 0));
    float linearDepth = reconstructCSZ_id3(depth);
    float3 position = reconstructCSPosition_id4(samplePosInt + float2(0.5, 0.5), linearDepth);
    position.x *= -1;
    float3 v = position - viewPosition;
    v.z *= -1;
    float distSq = dot(v, v);
    float vn = dot(v, viewNormal);
    const float epsilon = 0.01;
    float f = max(ParamRadiusSquared_id87 - distSq, 0.0);
    return f * f * f * max((vn - ParamBias_id85) / (epsilon + distSq), 0.0);
}
float3 reconstructCSNormal_id5(float3 position)
{
    return normalize(cross(ddy(position), ddx(position)));
}
float4 Shading_id7(inout PS_STREAMS streams)
{
    float depth = Texture0_id14.SampleLevel(Sampler_id42, streams.TexCoord_id62, 0).x;
    float linearDepth = reconstructCSZ_id3(depth);
    int2 screenPosition = streams.TexCoord_id62.xy * ScreenInfo_id82.xy;
    float3 viewPosition = reconstructCSPosition_id4(screenPosition + float2(0.5, 0.5), linearDepth);
    viewPosition.x *= -1;
    float3 viewNormal = reconstructCSNormal_id5(viewPosition.xyz);
    viewNormal.xy *= -1;
    int linearDepthInt = (int)linearDepth;
    float randomPatternRotationAngle = ((15 * linearDepthInt + 3 * screenPosition.x ^ 2 * screenPosition.y + screenPosition.x * screenPosition.y) & 0x0000FFFF) * 10;
    float diskRadius;
    diskRadius = ParamProjScale_id83 / linearDepth;
    float sum = 0.0;

    for (int i = 0; i < SamplesCount_id79; i++)
    {
        sum += sampleAO_id6(streams, screenPosition, viewPosition, viewNormal, diskRadius, i, randomPatternRotationAngle);
    }
    float temp = ParamRadiusSquared_id87 * ParamRadius_id86;
    sum /= temp * temp;
    float A = max(0.0, 1.0 - sum * 5 * ParamIntensity_id84 / SamplesCount_id79);
    float nearPlaneFade = saturate(linearDepth * 2.0 - 0.5);
    A = lerp(1, A, nearPlaneFade);
    if (abs(ddx(linearDepth)) < 0.02)
    {
        A -= ddx(A) * ((screenPosition.x & 1) - 0.5);
    }
    if (abs(ddy(linearDepth)) < 0.02)
    {
        A -= ddy(A) * ((screenPosition.y & 1) - 0.5);
    }
    return float4(A, A, A, A);
}
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ColorTarget_id2 = Shading_id7(streams);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id72 = __input__.Position_id72;
    streams.TexCoord_id62 = __input__.TexCoord_id62;
    streams.ShadingPosition_id0 = mul(streams.Position_id72, MatrixTransform_id73);
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.TexCoord_id62 = streams.TexCoord_id62;
    return __output__;
}
