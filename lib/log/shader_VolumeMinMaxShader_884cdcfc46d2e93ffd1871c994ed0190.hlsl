/**************************
***** Compiler Parameters *****
***************************
@P EffectName: VolumeMinMaxShader
***************************
****  ConstantBuffers  ****
***************************
cbuffer Globals [Size: 64]
@C    WorldViewProjection_id15 => VolumeMinMaxShader.WorldViewProjection
***************************
******  Resources    ******
***************************
@R    Globals => Globals [Stage: Vertex, Slot: (0-0)]
***************************
*****     Sources     *****
***************************
@S    VolumeMinMaxShader => edbc4763eafbcdc3e477089e45bbe4f7
@S    ShaderBase => 01e372056ff6c06edab8e988414a8f75
@S    ShaderBaseStream => 91c0ea8aae0a45ca00578a4084fa3607
@S    PositionHStream4 => 6a2c2e4bcfc42de2c49c69f480ead970
***************************
*****     Stages      *****
***************************
@G    Vertex => 5a19ed86942900a31e48354c79bfc8cd
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer Globals
// {
//
//   float4x4 WorldViewProjection_id15; // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Globals                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// POSITIONH                0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- __input__.Position_id16.x; v0.y <- __input__.Position_id16.y; v0.z <- __input__.Position_id16.z; v0.w <- __input__.Position_id16.w; 
//   o1.x <- <VSMain return value>.PositionH_id14.x; o1.y <- <VSMain return value>.PositionH_id14.y; o1.z <- <VSMain return value>.PositionH_id14.z; o1.w <- <VSMain return value>.PositionH_id14.w; 
//   o0.x <- <VSMain return value>.ShadingPosition_id0.x; o0.y <- <VSMain return value>.ShadingPosition_id0.y; o0.z <- <VSMain return value>.ShadingPosition_id0.z; o0.w <- <VSMain return value>.ShadingPosition_id0.w
//
#line 48 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_VolumeMinMaxShader_884cdcfc46d2e93ffd1871c994ed0190.hlsl"
dp4 r0.x, v0.xyzw, cb0[0].xyzw  // r0.x <- streams.ShadingPosition_id0.x
dp4 r0.y, v0.xyzw, cb0[1].xyzw  // r0.y <- streams.ShadingPosition_id0.y
dp4 r0.z, v0.xyzw, cb0[2].xyzw  // r0.z <- streams.ShadingPosition_id0.z
dp4 r0.w, v0.xyzw, cb0[3].xyzw  // r0.w <- streams.ShadingPosition_id0.w

#line 53
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r0.xyzw
ret 
// Approximately 7 instruction slots used
@G    Pixel => 0c85ea8a42561d59185405f3c1be92a8
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// POSITIONH                0   xyzw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
//
// Initial variable locations:
//   v0.x <- __input__.ShadingPosition_id0.x; v0.y <- __input__.ShadingPosition_id0.y; v0.z <- __input__.ShadingPosition_id0.z; v0.w <- __input__.ShadingPosition_id0.w; 
//   v1.x <- __input__.PositionH_id14.x; v1.y <- __input__.PositionH_id14.y; v1.z <- __input__.PositionH_id14.z; v1.w <- __input__.PositionH_id14.w; 
//   o0.x <- <PSMain return value>.ColorTarget_id2.x; o0.y <- <PSMain return value>.ColorTarget_id2.y; o0.z <- <PSMain return value>.ColorTarget_id2.z; o0.w <- <PSMain return value>.ColorTarget_id2.w
//
#line 38 "C:\Users\elektromeier\Desktop\VomAmt\VomAmtVR\lib\log\shader_VolumeMinMaxShader_884cdcfc46d2e93ffd1871c994ed0190.hlsl"
div o0.xy, v1.zzzz, v1.wwww

#line 42
mov o0.zw, l(0,0,0,1.000000)
ret 
// Approximately 3 instruction slots used
***************************
*************************/
struct PS_STREAMS 
{
    float4 PositionH_id14;
    float4 ColorTarget_id2;
};
struct PS_OUTPUT 
{
    float4 ColorTarget_id2 : SV_Target0;
};
struct PS_INPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float4 PositionH_id14 : POSITIONH;
};
struct VS_STREAMS 
{
    float4 Position_id16;
    float4 ShadingPosition_id0;
    float4 PositionH_id14;
};
struct VS_OUTPUT 
{
    float4 ShadingPosition_id0 : SV_Position;
    float4 PositionH_id14 : POSITIONH;
};
struct VS_INPUT 
{
    float4 Position_id16 : POSITION;
};
cbuffer Globals 
{
    matrix WorldViewProjection_id15;
};
PS_OUTPUT PSMain(PS_INPUT __input__)
{
    PS_STREAMS streams = (PS_STREAMS)0;
    streams.PositionH_id14 = __input__.PositionH_id14;
    float depth = streams.PositionH_id14.z / streams.PositionH_id14.w;
    streams.ColorTarget_id2 = float4(depth, depth, 0, 1);
    PS_OUTPUT __output__ = (PS_OUTPUT)0;
    __output__.ColorTarget_id2 = streams.ColorTarget_id2;
    return __output__;
}
VS_OUTPUT VSMain(VS_INPUT __input__)
{
    VS_STREAMS streams = (VS_STREAMS)0;
    streams.Position_id16 = __input__.Position_id16;
    streams.ShadingPosition_id0 = mul(streams.Position_id16, WorldViewProjection_id15);
    streams.PositionH_id14 = streams.ShadingPosition_id0;
    VS_OUTPUT __output__ = (VS_OUTPUT)0;
    __output__.ShadingPosition_id0 = streams.ShadingPosition_id0;
    __output__.PositionH_id14 = streams.PositionH_id14;
    return __output__;
}
